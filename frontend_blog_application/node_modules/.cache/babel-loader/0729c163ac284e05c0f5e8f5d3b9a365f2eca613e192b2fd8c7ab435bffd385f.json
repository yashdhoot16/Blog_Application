{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { Dom } from \"../../dom/index.js\";\nimport { clearCenterAlign, css } from \"./css.js\";\n/**\n * Align image\n */\nexport function hAlignElement(image, align) {\n  if (align && align !== 'normal') {\n    if (align !== 'center') {\n      css(image, 'float', align);\n      clearCenterAlign(image);\n    } else {\n      css(image, {\n        float: '',\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      });\n    }\n  } else {\n    if (css(image, 'float') && ['right', 'left'].indexOf(css(image, 'float').toString().toLowerCase()) !== -1) {\n      css(image, 'float', '');\n    }\n    clearCenterAlign(image);\n  }\n}\n/**\n * Remove text-align style for all selected children\n */\nexport function clearAlign(node) {\n  Dom.each(node, elm => {\n    if (Dom.isHTMLElement(elm)) {\n      if (elm.style.textAlign) {\n        elm.style.textAlign = '';\n        if (!elm.style.cssText.trim().length) {\n          elm.removeAttribute('style');\n        }\n      }\n    }\n  });\n}\n/**\n * Apply align for element\n */\nexport function alignElement(command, box) {\n  if (Dom.isNode(box) && Dom.isElement(box)) {\n    clearAlign(box);\n    switch (command.toLowerCase()) {\n      case 'justifyfull':\n        box.style.textAlign = 'justify';\n        break;\n      case 'justifyright':\n        box.style.textAlign = 'right';\n        break;\n      case 'justifyleft':\n        box.style.textAlign = 'left';\n        break;\n      case 'justifycenter':\n        box.style.textAlign = 'center';\n        break;\n    }\n  }\n}","map":{"version":3,"names":["Dom","clearCenterAlign","css","hAlignElement","image","align","float","display","marginLeft","marginRight","indexOf","toString","toLowerCase","clearAlign","node","each","elm","isHTMLElement","style","textAlign","cssText","trim","length","removeAttribute","alignElement","command","box","isNode","isElement"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/helpers/utils/align.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { Dom } from \"../../dom/index.js\";\nimport { clearCenterAlign, css } from \"./css.js\";\n/**\n * Align image\n */\nexport function hAlignElement(image, align) {\n    if (align && align !== 'normal') {\n        if (align !== 'center') {\n            css(image, 'float', align);\n            clearCenterAlign(image);\n        }\n        else {\n            css(image, {\n                float: '',\n                display: 'block',\n                marginLeft: 'auto',\n                marginRight: 'auto'\n            });\n        }\n    }\n    else {\n        if (css(image, 'float') &&\n            ['right', 'left'].indexOf(css(image, 'float').toString().toLowerCase()) !== -1) {\n            css(image, 'float', '');\n        }\n        clearCenterAlign(image);\n    }\n}\n/**\n * Remove text-align style for all selected children\n */\nexport function clearAlign(node) {\n    Dom.each(node, elm => {\n        if (Dom.isHTMLElement(elm)) {\n            if (elm.style.textAlign) {\n                elm.style.textAlign = '';\n                if (!elm.style.cssText.trim().length) {\n                    elm.removeAttribute('style');\n                }\n            }\n        }\n    });\n}\n/**\n * Apply align for element\n */\nexport function alignElement(command, box) {\n    if (Dom.isNode(box) && Dom.isElement(box)) {\n        clearAlign(box);\n        switch (command.toLowerCase()) {\n            case 'justifyfull':\n                box.style.textAlign = 'justify';\n                break;\n            case 'justifyright':\n                box.style.textAlign = 'right';\n                break;\n            case 'justifyleft':\n                box.style.textAlign = 'left';\n                break;\n            case 'justifycenter':\n                box.style.textAlign = 'center';\n                break;\n        }\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAG,QAAQ,oBAAoB;AACxC,SAASC,gBAAgB,EAAEC,GAAG,QAAQ,UAAU;AAChD;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACC,KAAK,EAAEC,KAAK,EAAE;EACxC,IAAIA,KAAK,IAAIA,KAAK,KAAK,QAAQ,EAAE;IAC7B,IAAIA,KAAK,KAAK,QAAQ,EAAE;MACpBH,GAAG,CAACE,KAAK,EAAE,OAAO,EAAEC,KAAK,CAAC;MAC1BJ,gBAAgB,CAACG,KAAK,CAAC;IAC3B,CAAC,MACI;MACDF,GAAG,CAACE,KAAK,EAAE;QACPE,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,OAAO;QAChBC,UAAU,EAAE,MAAM;QAClBC,WAAW,EAAE;MACjB,CAAC,CAAC;IACN;EACJ,CAAC,MACI;IACD,IAAIP,GAAG,CAACE,KAAK,EAAE,OAAO,CAAC,IACnB,CAAC,OAAO,EAAE,MAAM,CAAC,CAACM,OAAO,CAACR,GAAG,CAACE,KAAK,EAAE,OAAO,CAAC,CAACO,QAAQ,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;MAChFV,GAAG,CAACE,KAAK,EAAE,OAAO,EAAE,EAAE,CAAC;IAC3B;IACAH,gBAAgB,CAACG,KAAK,CAAC;EAC3B;AACJ;AACA;AACA;AACA;AACA,OAAO,SAASS,UAAUA,CAACC,IAAI,EAAE;EAC7Bd,GAAG,CAACe,IAAI,CAACD,IAAI,EAAEE,GAAG,IAAI;IAClB,IAAIhB,GAAG,CAACiB,aAAa,CAACD,GAAG,CAAC,EAAE;MACxB,IAAIA,GAAG,CAACE,KAAK,CAACC,SAAS,EAAE;QACrBH,GAAG,CAACE,KAAK,CAACC,SAAS,GAAG,EAAE;QACxB,IAAI,CAACH,GAAG,CAACE,KAAK,CAACE,OAAO,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,EAAE;UAClCN,GAAG,CAACO,eAAe,CAAC,OAAO,CAAC;QAChC;MACJ;IACJ;EACJ,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,OAAO,EAAEC,GAAG,EAAE;EACvC,IAAI1B,GAAG,CAAC2B,MAAM,CAACD,GAAG,CAAC,IAAI1B,GAAG,CAAC4B,SAAS,CAACF,GAAG,CAAC,EAAE;IACvCb,UAAU,CAACa,GAAG,CAAC;IACf,QAAQD,OAAO,CAACb,WAAW,CAAC,CAAC;MACzB,KAAK,aAAa;QACdc,GAAG,CAACR,KAAK,CAACC,SAAS,GAAG,SAAS;QAC/B;MACJ,KAAK,cAAc;QACfO,GAAG,CAACR,KAAK,CAACC,SAAS,GAAG,OAAO;QAC7B;MACJ,KAAK,aAAa;QACdO,GAAG,CAACR,KAAK,CAACC,SAAS,GAAG,MAAM;QAC5B;MACJ,KAAK,eAAe;QAChBO,GAAG,CAACR,KAAK,CAACC,SAAS,GAAG,QAAQ;QAC9B;IACR;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
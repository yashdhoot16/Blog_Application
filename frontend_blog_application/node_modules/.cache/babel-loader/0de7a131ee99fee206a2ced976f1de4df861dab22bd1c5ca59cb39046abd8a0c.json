{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YDHOOT\\\\Documents\\\\Spring Tool Suite Projects\\\\BlogApplication\\\\frontend_blog_application\\\\src\\\\components\\\\NewFeed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getAllPost } from \"../services/post_service\";\nimport { error } from \"./../../node_modules/jodit/esm/core/helpers/utils/error/error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewFeed = () => {\n  _s();\n  const [postContent, setPostContent] = useState(null);\n  useEffect(() => {\n    // load all posts from server..\n    getAllPost().then(data => {\n      console.log(data);\n      setPostContent(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is news feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(NewFeed, \"w1zWpoV2i6miptazRP5G7DU7a00=\");\n_c = NewFeed;\nexport default NewFeed;\nvar _c;\n$RefreshReg$(_c, \"NewFeed\");","map":{"version":3,"names":["React","useEffect","useState","getAllPost","error","jsxDEV","_jsxDEV","NewFeed","_s","postContent","setPostContent","then","data","console","log","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/src/components/NewFeed.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getAllPost } from \"../services/post_service\";\r\nimport { error } from \"./../../node_modules/jodit/esm/core/helpers/utils/error/error\";\r\n\r\nconst NewFeed = () => {\r\n\r\n    const [postContent, setPostContent] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // load all posts from server..\r\n    getAllPost()\r\n      .then((data) => {\r\n        console.log(data);\r\n        setPostContent(data)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>This is news feed</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewFeed;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,KAAK,QAAQ,+DAA+D;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd;IACAE,UAAU,CAAC,CAAC,CACTQ,IAAI,CAAEC,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBF,cAAc,CAACE,IAAI,CAAC;IACtB,CAAC,CAAC,CACDG,KAAK,CAAEX,KAAK,IAAK;MAChBS,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEE,OAAA;IAAAU,QAAA,eACEV,OAAA;MAAAU,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAACZ,EAAA,CArBID,OAAO;AAAAc,EAAA,GAAPd,OAAO;AAuBb,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\n/**\n * Class for adding event handling capability\n *\n * ```ts\n * class SomeClass extends Eventify<{ start: (node: Node) => boolean; }> {\n * \tconstructor() {\n * \t\tsuper();\n * \t\tsetTimeout(() => {\n * \t\t\tif (this.emit('start', document.body)) {\n * \t\t\t\tconsole.log('yes');\n * \t\t\t};\n * \t\t}, 100);\n * \t}\n * }\n *\n * const sm = new SomeClass();\n * sm.on('start', (node) => {\n * \tconsole.log(node);\n * \treturn true;\n * })\n * ```\n */\nexport class Eventify {\n  constructor() {\n    this.__map = new Map();\n  }\n  on(name, func) {\n    var _a;\n    if (!this.__map.has(name)) {\n      this.__map.set(name, new Set());\n    }\n    (_a = this.__map.get(name)) === null || _a === void 0 ? void 0 : _a.add(func);\n    return this;\n  }\n  off(name, func) {\n    var _a;\n    if (this.__map.has(name)) {\n      (_a = this.__map.get(name)) === null || _a === void 0 ? void 0 : _a.delete(func);\n    }\n    return this;\n  }\n  destruct() {\n    this.__map.clear();\n  }\n  emit(name, ...args) {\n    var _a;\n    let result;\n    if (this.__map.has(name)) {\n      (_a = this.__map.get(name)) === null || _a === void 0 ? void 0 : _a.forEach(cb => {\n        result = cb(...args);\n      });\n    }\n    return result;\n  }\n}","map":{"version":3,"names":["Eventify","constructor","__map","Map","on","name","func","_a","has","set","Set","get","add","off","delete","destruct","clear","emit","args","result","forEach","cb"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/event-emitter/eventify.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\n/**\n * Class for adding event handling capability\n *\n * ```ts\n * class SomeClass extends Eventify<{ start: (node: Node) => boolean; }> {\n * \tconstructor() {\n * \t\tsuper();\n * \t\tsetTimeout(() => {\n * \t\t\tif (this.emit('start', document.body)) {\n * \t\t\t\tconsole.log('yes');\n * \t\t\t};\n * \t\t}, 100);\n * \t}\n * }\n *\n * const sm = new SomeClass();\n * sm.on('start', (node) => {\n * \tconsole.log(node);\n * \treturn true;\n * })\n * ```\n */\nexport class Eventify {\n    constructor() {\n        this.__map = new Map();\n    }\n    on(name, func) {\n        var _a;\n        if (!this.__map.has(name)) {\n            this.__map.set(name, new Set());\n        }\n        (_a = this.__map.get(name)) === null || _a === void 0 ? void 0 : _a.add(func);\n        return this;\n    }\n    off(name, func) {\n        var _a;\n        if (this.__map.has(name)) {\n            (_a = this.__map.get(name)) === null || _a === void 0 ? void 0 : _a.delete(func);\n        }\n        return this;\n    }\n    destruct() {\n        this.__map.clear();\n    }\n    emit(name, ...args) {\n        var _a;\n        let result;\n        if (this.__map.has(name)) {\n            (_a = this.__map.get(name)) === null || _a === void 0 ? void 0 : _a.forEach(cb => {\n                result = cb(...args);\n            });\n        }\n        return result;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,QAAQ,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC1B;EACAC,EAAEA,CAACC,IAAI,EAAEC,IAAI,EAAE;IACX,IAAIC,EAAE;IACN,IAAI,CAAC,IAAI,CAACL,KAAK,CAACM,GAAG,CAACH,IAAI,CAAC,EAAE;MACvB,IAAI,CAACH,KAAK,CAACO,GAAG,CAACJ,IAAI,EAAE,IAAIK,GAAG,CAAC,CAAC,CAAC;IACnC;IACA,CAACH,EAAE,GAAG,IAAI,CAACL,KAAK,CAACS,GAAG,CAACN,IAAI,CAAC,MAAM,IAAI,IAAIE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,GAAG,CAACN,IAAI,CAAC;IAC7E,OAAO,IAAI;EACf;EACAO,GAAGA,CAACR,IAAI,EAAEC,IAAI,EAAE;IACZ,IAAIC,EAAE;IACN,IAAI,IAAI,CAACL,KAAK,CAACM,GAAG,CAACH,IAAI,CAAC,EAAE;MACtB,CAACE,EAAE,GAAG,IAAI,CAACL,KAAK,CAACS,GAAG,CAACN,IAAI,CAAC,MAAM,IAAI,IAAIE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACO,MAAM,CAACR,IAAI,CAAC;IACpF;IACA,OAAO,IAAI;EACf;EACAS,QAAQA,CAAA,EAAG;IACP,IAAI,CAACb,KAAK,CAACc,KAAK,CAAC,CAAC;EACtB;EACAC,IAAIA,CAACZ,IAAI,EAAE,GAAGa,IAAI,EAAE;IAChB,IAAIX,EAAE;IACN,IAAIY,MAAM;IACV,IAAI,IAAI,CAACjB,KAAK,CAACM,GAAG,CAACH,IAAI,CAAC,EAAE;MACtB,CAACE,EAAE,GAAG,IAAI,CAACL,KAAK,CAACS,GAAG,CAACN,IAAI,CAAC,MAAM,IAAI,IAAIE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACa,OAAO,CAACC,EAAE,IAAI;QAC9EF,MAAM,GAAGE,EAAE,CAAC,GAAGH,IAAI,CAAC;MACxB,CAAC,CAAC;IACN;IACA,OAAOC,MAAM;EACjB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
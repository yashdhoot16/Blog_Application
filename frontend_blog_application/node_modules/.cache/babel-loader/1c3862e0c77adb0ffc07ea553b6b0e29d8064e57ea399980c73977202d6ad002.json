{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { isArray } from \"../checker/is-array.js\";\nimport { isNumeric } from \"../checker/is-numeric.js\";\nimport { isPlainObject } from \"../checker/is-plain-object.js\";\nimport { isString } from \"../checker/is-string.js\";\n/**\n * Safe access in tree object\n *\n * @example\n * ```js\n * const a = {}, b = {};\n * Jodit.modules.Helpers.set('a.b.c.d.e', 1, a);\n * console.log(a);// {a: {b: {c: {d: {e: 1}}}}}\n *\n * Jodit.modules.Helpers.set('a.0.e', 1, b);\n * console.log(b);// {a: [{e: 1}]}\n * ```\n */\nexport function set(chain, value, obj) {\n  if (!isString(chain) || !chain.length) {\n    return;\n  }\n  const parts = chain.split('.');\n  let result = obj,\n    key = parts[0];\n  for (let i = 0; i < parts.length - 1; i += 1) {\n    key = parts[i];\n    if (!isArray(result[key]) && !isPlainObject(result[key])) {\n      result[key] = isNumeric(parts[i + 1]) ? [] : {};\n    }\n    result = result[key];\n  }\n  if (result) {\n    result[parts[parts.length - 1]] = value;\n  }\n}","map":{"version":3,"names":["isArray","isNumeric","isPlainObject","isString","set","chain","value","obj","length","parts","split","result","key","i"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/helpers/utils/set.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { isArray } from \"../checker/is-array.js\";\nimport { isNumeric } from \"../checker/is-numeric.js\";\nimport { isPlainObject } from \"../checker/is-plain-object.js\";\nimport { isString } from \"../checker/is-string.js\";\n/**\n * Safe access in tree object\n *\n * @example\n * ```js\n * const a = {}, b = {};\n * Jodit.modules.Helpers.set('a.b.c.d.e', 1, a);\n * console.log(a);// {a: {b: {c: {d: {e: 1}}}}}\n *\n * Jodit.modules.Helpers.set('a.0.e', 1, b);\n * console.log(b);// {a: [{e: 1}]}\n * ```\n */\nexport function set(chain, value, obj) {\n    if (!isString(chain) || !chain.length) {\n        return;\n    }\n    const parts = chain.split('.');\n    let result = obj, key = parts[0];\n    for (let i = 0; i < parts.length - 1; i += 1) {\n        key = parts[i];\n        if (!isArray(result[key]) && !isPlainObject(result[key])) {\n            result[key] = isNumeric(parts[i + 1]) ? [] : {};\n        }\n        result = result[key];\n    }\n    if (result) {\n        result[parts[parts.length - 1]] = value;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,QAAQ,QAAQ,yBAAyB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,GAAG,EAAE;EACnC,IAAI,CAACJ,QAAQ,CAACE,KAAK,CAAC,IAAI,CAACA,KAAK,CAACG,MAAM,EAAE;IACnC;EACJ;EACA,MAAMC,KAAK,GAAGJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC;EAC9B,IAAIC,MAAM,GAAGJ,GAAG;IAAEK,GAAG,GAAGH,KAAK,CAAC,CAAC,CAAC;EAChC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACD,MAAM,GAAG,CAAC,EAAEK,CAAC,IAAI,CAAC,EAAE;IAC1CD,GAAG,GAAGH,KAAK,CAACI,CAAC,CAAC;IACd,IAAI,CAACb,OAAO,CAACW,MAAM,CAACC,GAAG,CAAC,CAAC,IAAI,CAACV,aAAa,CAACS,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE;MACtDD,MAAM,CAACC,GAAG,CAAC,GAAGX,SAAS,CAACQ,KAAK,CAACI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACnD;IACAF,MAAM,GAAGA,MAAM,CAACC,GAAG,CAAC;EACxB;EACA,IAAID,MAAM,EAAE;IACRA,MAAM,CAACF,KAAK,CAACA,KAAK,CAACD,MAAM,GAAG,CAAC,CAAC,CAAC,GAAGF,KAAK;EAC3C;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
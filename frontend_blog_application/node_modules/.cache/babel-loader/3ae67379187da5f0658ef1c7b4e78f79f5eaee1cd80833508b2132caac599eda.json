{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { Component, STATUSES } from \"../../component/index.js\";\nimport { isFunction } from \"../../helpers/checker/is-function.js\";\nimport { error } from \"../../helpers/utils/error/index.js\";\nexport function idle() {\n  return (target, propertyKey) => {\n    if (!isFunction(target[propertyKey])) {\n      throw error('Handler must be a Function');\n    }\n    target.hookStatus(STATUSES.ready, component => {\n      const {\n        async\n      } = component;\n      const originalMethod = component[propertyKey];\n      component[propertyKey] = (...args) => async.requestIdleCallback(originalMethod.bind(component, ...args));\n    });\n  };\n}","map":{"version":3,"names":["Component","STATUSES","isFunction","error","idle","target","propertyKey","hookStatus","ready","component","async","originalMethod","args","requestIdleCallback","bind"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/decorators/idle/idle.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { Component, STATUSES } from \"../../component/index.js\";\nimport { isFunction } from \"../../helpers/checker/is-function.js\";\nimport { error } from \"../../helpers/utils/error/index.js\";\nexport function idle() {\n    return (target, propertyKey) => {\n        if (!isFunction(target[propertyKey])) {\n            throw error('Handler must be a Function');\n        }\n        target.hookStatus(STATUSES.ready, (component) => {\n            const { async } = component;\n            const originalMethod = component[propertyKey];\n            component[propertyKey] = (...args) => async.requestIdleCallback(originalMethod.bind(component, ...args));\n        });\n    };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,0BAA0B;AAC9D,SAASC,UAAU,QAAQ,sCAAsC;AACjE,SAASC,KAAK,QAAQ,oCAAoC;AAC1D,OAAO,SAASC,IAAIA,CAAA,EAAG;EACnB,OAAO,CAACC,MAAM,EAAEC,WAAW,KAAK;IAC5B,IAAI,CAACJ,UAAU,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC,EAAE;MAClC,MAAMH,KAAK,CAAC,4BAA4B,CAAC;IAC7C;IACAE,MAAM,CAACE,UAAU,CAACN,QAAQ,CAACO,KAAK,EAAGC,SAAS,IAAK;MAC7C,MAAM;QAAEC;MAAM,CAAC,GAAGD,SAAS;MAC3B,MAAME,cAAc,GAAGF,SAAS,CAACH,WAAW,CAAC;MAC7CG,SAAS,CAACH,WAAW,CAAC,GAAG,CAAC,GAAGM,IAAI,KAAKF,KAAK,CAACG,mBAAmB,CAACF,cAAc,CAACG,IAAI,CAACL,SAAS,EAAE,GAAGG,IAAI,CAAC,CAAC;IAC5G,CAAC,CAAC;EACN,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
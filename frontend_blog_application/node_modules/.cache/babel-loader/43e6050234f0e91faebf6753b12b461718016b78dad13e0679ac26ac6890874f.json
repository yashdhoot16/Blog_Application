{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { isArray } from \"../checker/is-array.js\";\nimport { isPlainObject } from \"../checker/is-plain-object.js\";\nimport { isString } from \"../checker/is-string.js\";\nimport { isVoid } from \"../checker/is-void.js\";\nimport { Config } from \"../../../config.js\";\nimport { isAtom } from \"./extend.js\";\nimport { keys } from \"./utils.js\";\n/**\n * @example\n * ```js\n * const defaultConfig = {\n *   a: {\n *     b: {\n *       c: 2\n *     },\n *     e: 5\n *   },\n *   d: {\n *     g: 7\n *   }\n * };\n *\n * const options = ConfigProto({a: {\n *   b: {\n *     c: 1\n *   }\n * }}, defaultConfig);\n *\n * console.log(options.a.b.c); // 1\n * console.log(options.a.e); // 5\n * console.log(options.d.g); // 7\n *\n * defaultConfig.d.g  = 8;\n * console.log(options.d.g); // 8\n *\n * ```\n */\nexport function ConfigProto(options, proto, deep = 0) {\n  // Already prototyped object should not be prototyped again\n  if (Object.getPrototypeOf(options) !== Object.prototype) {\n    return options;\n  }\n  const def = Config.defaultOptions;\n  if (isString(options.preset)) {\n    if (def.presets[options.preset] !== undefined) {\n      const preset = def.presets[options.preset];\n      Object.keys(preset).forEach(subKey => {\n        if (isVoid(options[subKey])) {\n          options[subKey] = preset[subKey];\n        }\n      });\n    }\n    delete options.preset;\n  }\n  const newOpt = {};\n  Object.keys(options).forEach(key => {\n    const opt = options[key],\n      protoKey = proto ? proto[key] : null;\n    if (isPlainObject(opt) && isPlainObject(protoKey) && !isAtom(opt)) {\n      newOpt[key] = ConfigProto(opt, protoKey, deep + 1);\n      return;\n    }\n    // On the first level all arrays are atomic\n    if (deep !== 0 && isArray(opt) && !isAtom(opt) && isArray(protoKey)) {\n      newOpt[key] = [...opt, ...protoKey.slice(opt.length)];\n      return;\n    }\n    newOpt[key] = opt;\n  });\n  Object.setPrototypeOf(newOpt, proto);\n  return newOpt;\n}\nexport function ConfigFlatten(obj) {\n  return keys(obj, false).reduce((app, key) => {\n    app[key] = obj[key];\n    return app;\n  }, {});\n}\n/**\n * Returns a plain object from a prototype-based object.\n * ```typescript\n * const editor = Jodit.make('#editor', {\n *   image: {\n *     dialogWidth: 500\n *   }\n * });\n *\n * console.log(editor.o.image.openOnDblClick) // true\n * // But you can't get all options in plain object\n * console.log(JSON.stringify(editor.o.image)); // {\"dialogWidth\":500}\n *\n * const plain = Jodit.modules.Helpers.ConfigDeepFlatten(editor.o.image);\n * console.log(JSON.stringify(plain)); // {\"dialogWidth\":500, \"openOnDblClick\": true, \"editSrc\": true, ...}\n * ```\n */\nexport function ConfigDeepFlatten(obj) {\n  return keys(obj, false).reduce((app, key) => {\n    app[key] = isPlainObject(obj[key]) ? ConfigDeepFlatten(obj[key]) : obj[key];\n    return app;\n  }, {});\n}","map":{"version":3,"names":["isArray","isPlainObject","isString","isVoid","Config","isAtom","keys","ConfigProto","options","proto","deep","Object","getPrototypeOf","prototype","def","defaultOptions","preset","presets","undefined","forEach","subKey","newOpt","key","opt","protoKey","slice","length","setPrototypeOf","ConfigFlatten","obj","reduce","app","ConfigDeepFlatten"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/helpers/utils/config-proto.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { isArray } from \"../checker/is-array.js\";\nimport { isPlainObject } from \"../checker/is-plain-object.js\";\nimport { isString } from \"../checker/is-string.js\";\nimport { isVoid } from \"../checker/is-void.js\";\nimport { Config } from \"../../../config.js\";\nimport { isAtom } from \"./extend.js\";\nimport { keys } from \"./utils.js\";\n/**\n * @example\n * ```js\n * const defaultConfig = {\n *   a: {\n *     b: {\n *       c: 2\n *     },\n *     e: 5\n *   },\n *   d: {\n *     g: 7\n *   }\n * };\n *\n * const options = ConfigProto({a: {\n *   b: {\n *     c: 1\n *   }\n * }}, defaultConfig);\n *\n * console.log(options.a.b.c); // 1\n * console.log(options.a.e); // 5\n * console.log(options.d.g); // 7\n *\n * defaultConfig.d.g  = 8;\n * console.log(options.d.g); // 8\n *\n * ```\n */\nexport function ConfigProto(options, proto, deep = 0) {\n    // Already prototyped object should not be prototyped again\n    if (Object.getPrototypeOf(options) !== Object.prototype) {\n        return options;\n    }\n    const def = Config.defaultOptions;\n    if (isString(options.preset)) {\n        if (def.presets[options.preset] !== undefined) {\n            const preset = def.presets[options.preset];\n            Object.keys(preset).forEach(subKey => {\n                if (isVoid(options[subKey])) {\n                    options[subKey] = preset[subKey];\n                }\n            });\n        }\n        delete options.preset;\n    }\n    const newOpt = {};\n    Object.keys(options).forEach(key => {\n        const opt = options[key], protoKey = proto ? proto[key] : null;\n        if (isPlainObject(opt) && isPlainObject(protoKey) && !isAtom(opt)) {\n            newOpt[key] = ConfigProto(opt, protoKey, deep + 1);\n            return;\n        }\n        // On the first level all arrays are atomic\n        if (deep !== 0 && isArray(opt) && !isAtom(opt) && isArray(protoKey)) {\n            newOpt[key] = [...opt, ...protoKey.slice(opt.length)];\n            return;\n        }\n        newOpt[key] = opt;\n    });\n    Object.setPrototypeOf(newOpt, proto);\n    return newOpt;\n}\nexport function ConfigFlatten(obj) {\n    return keys(obj, false).reduce((app, key) => {\n        app[key] = obj[key];\n        return app;\n    }, {});\n}\n/**\n * Returns a plain object from a prototype-based object.\n * ```typescript\n * const editor = Jodit.make('#editor', {\n *   image: {\n *     dialogWidth: 500\n *   }\n * });\n *\n * console.log(editor.o.image.openOnDblClick) // true\n * // But you can't get all options in plain object\n * console.log(JSON.stringify(editor.o.image)); // {\"dialogWidth\":500}\n *\n * const plain = Jodit.modules.Helpers.ConfigDeepFlatten(editor.o.image);\n * console.log(JSON.stringify(plain)); // {\"dialogWidth\":500, \"openOnDblClick\": true, \"editSrc\": true, ...}\n * ```\n */\nexport function ConfigDeepFlatten(obj) {\n    return keys(obj, false).reduce((app, key) => {\n        app[key] = isPlainObject(obj[key])\n            ? ConfigDeepFlatten(obj[key])\n            : obj[key];\n        return app;\n    }, {});\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\n/**\n * @module helpers/utils\n */\n/**\n * Module returns method that is used to determine the browser\n * @example\n * ```javascript\n * console.log(Jodit.modules.Helpers.browser('mse'));\n * console.log(Jodit.modules.Helpers.browser('chrome'));\n * console.log($Jodit.modules.Helpers.browser('opera'));\n * console.log(Jodit.modules.Helpers.browser('firefox'));\n * console.log(Jodit.modules.Helpers.browser('mse') && Jodit.modules.Helpers.browser('version') > 10);\n * ```\n */\nexport const browser = browser => {\n  const ua = navigator.userAgent.toLowerCase(),\n    match = /(firefox)[\\s/]([\\w.]+)/.exec(ua) || /(chrome)[\\s/]([\\w.]+)/.exec(ua) || /(webkit)[\\s/]([\\w.]+)/.exec(ua) || /(opera)(?:.*version)[\\s/]([\\w.]+)/.exec(ua) || /(msie)[\\s]([\\w.]+)/.exec(ua) || /(trident)\\/([\\w.]+)/.exec(ua) || ua.indexOf('compatible') < 0 || [];\n  if (browser === 'version') {\n    return match[2];\n  }\n  if (browser === 'webkit') {\n    return match[1] === 'chrome' || match[1] === 'webkit';\n  }\n  if (browser === 'ff') {\n    return match[1] === 'firefox';\n  }\n  if (browser === 'msie') {\n    return match[1] === 'trident' || match[1] === 'msie';\n  }\n  return match[1] === browser;\n};","map":{"version":3,"names":["browser","ua","navigator","userAgent","toLowerCase","match","exec","indexOf"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/helpers/utils/browser.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\n/**\n * @module helpers/utils\n */\n/**\n * Module returns method that is used to determine the browser\n * @example\n * ```javascript\n * console.log(Jodit.modules.Helpers.browser('mse'));\n * console.log(Jodit.modules.Helpers.browser('chrome'));\n * console.log($Jodit.modules.Helpers.browser('opera'));\n * console.log(Jodit.modules.Helpers.browser('firefox'));\n * console.log(Jodit.modules.Helpers.browser('mse') && Jodit.modules.Helpers.browser('version') > 10);\n * ```\n */\nexport const browser = (browser) => {\n    const ua = navigator.userAgent.toLowerCase(), match = /(firefox)[\\s/]([\\w.]+)/.exec(ua) ||\n        /(chrome)[\\s/]([\\w.]+)/.exec(ua) ||\n        /(webkit)[\\s/]([\\w.]+)/.exec(ua) ||\n        /(opera)(?:.*version)[\\s/]([\\w.]+)/.exec(ua) ||\n        /(msie)[\\s]([\\w.]+)/.exec(ua) ||\n        /(trident)\\/([\\w.]+)/.exec(ua) ||\n        ua.indexOf('compatible') < 0 ||\n        [];\n    if (browser === 'version') {\n        return match[2];\n    }\n    if (browser === 'webkit') {\n        return match[1] === 'chrome' || match[1] === 'webkit';\n    }\n    if (browser === 'ff') {\n        return match[1] === 'firefox';\n    }\n    if (browser === 'msie') {\n        return match[1] === 'trident' || match[1] === 'msie';\n    }\n    return match[1] === browser;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,OAAO,GAAIA,OAAO,IAAK;EAChC,MAAMC,EAAE,GAAGC,SAAS,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC;IAAEC,KAAK,GAAG,wBAAwB,CAACC,IAAI,CAACL,EAAE,CAAC,IACnF,uBAAuB,CAACK,IAAI,CAACL,EAAE,CAAC,IAChC,uBAAuB,CAACK,IAAI,CAACL,EAAE,CAAC,IAChC,mCAAmC,CAACK,IAAI,CAACL,EAAE,CAAC,IAC5C,oBAAoB,CAACK,IAAI,CAACL,EAAE,CAAC,IAC7B,qBAAqB,CAACK,IAAI,CAACL,EAAE,CAAC,IAC9BA,EAAE,CAACM,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,IAC5B,EAAE;EACN,IAAIP,OAAO,KAAK,SAAS,EAAE;IACvB,OAAOK,KAAK,CAAC,CAAC,CAAC;EACnB;EACA,IAAIL,OAAO,KAAK,QAAQ,EAAE;IACtB,OAAOK,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ;EACzD;EACA,IAAIL,OAAO,KAAK,IAAI,EAAE;IAClB,OAAOK,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS;EACjC;EACA,IAAIL,OAAO,KAAK,MAAM,EAAE;IACpB,OAAOK,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,MAAM;EACxD;EACA,OAAOA,KAAK,CAAC,CAAC,CAAC,KAAKL,OAAO;AAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
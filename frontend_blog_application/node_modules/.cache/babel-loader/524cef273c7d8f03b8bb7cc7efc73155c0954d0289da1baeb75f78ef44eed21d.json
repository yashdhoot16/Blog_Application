{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\n/**\n * @module helpers/string\n */\nimport { INVISIBLE_SPACE } from \"../../constants.js\";\n/**\n * Finds the position of the substring in the string, if any, and returns the length of the found subsequence.\n * Unlike `indexOf` ignores INVISIBLE_SPACE and may fail at `maxDistance` characters\n */\nexport function fuzzySearchIndex(needle, haystack, offset = 0, maxDistance = 1) {\n  let i = 0,\n    j = 0,\n    startIndex = -1,\n    len = 0,\n    errorDistance = 0;\n  for (j = offset; i < needle.length && j < haystack.length;) {\n    if (needle[i].toLowerCase() === haystack[j].toLowerCase()) {\n      i++;\n      len++;\n      errorDistance = 0;\n      if (startIndex === -1) {\n        startIndex = j;\n      }\n    } else if (i > 0) {\n      if (errorDistance >= maxDistance && haystack[j] !== INVISIBLE_SPACE) {\n        i = 0;\n        startIndex = -1;\n        len = 0;\n        errorDistance = 0;\n        j--;\n      } else {\n        errorDistance++;\n        len++;\n      }\n    }\n    j++;\n  }\n  return i === needle.length ? [startIndex, len] : [-1, 0];\n}","map":{"version":3,"names":["INVISIBLE_SPACE","fuzzySearchIndex","needle","haystack","offset","maxDistance","i","j","startIndex","len","errorDistance","length","toLowerCase"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/helpers/string/fuzzy-search-index.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\n/**\n * @module helpers/string\n */\nimport { INVISIBLE_SPACE } from \"../../constants.js\";\n/**\n * Finds the position of the substring in the string, if any, and returns the length of the found subsequence.\n * Unlike `indexOf` ignores INVISIBLE_SPACE and may fail at `maxDistance` characters\n */\nexport function fuzzySearchIndex(needle, haystack, offset = 0, maxDistance = 1) {\n    let i = 0, j = 0, startIndex = -1, len = 0, errorDistance = 0;\n    for (j = offset; i < needle.length && j < haystack.length;) {\n        if (needle[i].toLowerCase() === haystack[j].toLowerCase()) {\n            i++;\n            len++;\n            errorDistance = 0;\n            if (startIndex === -1) {\n                startIndex = j;\n            }\n        }\n        else if (i > 0) {\n            if (errorDistance >= maxDistance &&\n                haystack[j] !== INVISIBLE_SPACE) {\n                i = 0;\n                startIndex = -1;\n                len = 0;\n                errorDistance = 0;\n                j--;\n            }\n            else {\n                errorDistance++;\n                len++;\n            }\n        }\n        j++;\n    }\n    return i === needle.length ? [startIndex, len] : [-1, 0];\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAe,QAAQ,oBAAoB;AACpD;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,GAAG,CAAC,EAAEC,WAAW,GAAG,CAAC,EAAE;EAC5E,IAAIC,CAAC,GAAG,CAAC;IAAEC,CAAC,GAAG,CAAC;IAAEC,UAAU,GAAG,CAAC,CAAC;IAAEC,GAAG,GAAG,CAAC;IAAEC,aAAa,GAAG,CAAC;EAC7D,KAAKH,CAAC,GAAGH,MAAM,EAAEE,CAAC,GAAGJ,MAAM,CAACS,MAAM,IAAIJ,CAAC,GAAGJ,QAAQ,CAACQ,MAAM,GAAG;IACxD,IAAIT,MAAM,CAACI,CAAC,CAAC,CAACM,WAAW,CAAC,CAAC,KAAKT,QAAQ,CAACI,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC,EAAE;MACvDN,CAAC,EAAE;MACHG,GAAG,EAAE;MACLC,aAAa,GAAG,CAAC;MACjB,IAAIF,UAAU,KAAK,CAAC,CAAC,EAAE;QACnBA,UAAU,GAAGD,CAAC;MAClB;IACJ,CAAC,MACI,IAAID,CAAC,GAAG,CAAC,EAAE;MACZ,IAAII,aAAa,IAAIL,WAAW,IAC5BF,QAAQ,CAACI,CAAC,CAAC,KAAKP,eAAe,EAAE;QACjCM,CAAC,GAAG,CAAC;QACLE,UAAU,GAAG,CAAC,CAAC;QACfC,GAAG,GAAG,CAAC;QACPC,aAAa,GAAG,CAAC;QACjBH,CAAC,EAAE;MACP,CAAC,MACI;QACDG,aAAa,EAAE;QACfD,GAAG,EAAE;MACT;IACJ;IACAF,CAAC,EAAE;EACP;EACA,OAAOD,CAAC,KAAKJ,MAAM,CAACS,MAAM,GAAG,CAACH,UAAU,EAAEC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAC5D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YDHOOT\\\\Documents\\\\Spring Tool Suite Projects\\\\BlogApplication\\\\frontend_blog_application\\\\src\\\\pages\\\\Categories.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Base from \"../components/Base\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Row, Col, Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport { loadPostByCategory } from \"../services/post_service\";\nimport { toast } from \"react-toastify\";\nimport Post from \"./../components/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Categories = () => {\n  _s();\n  var _postContent$content;\n  const [postContent, setPostContent] = useState({\n    content: []\n  });\n  const {\n    categoryId\n  } = useParams();\n  useEffect(() => {\n    // console.log(categoryId);\n    loadPostByCategory(categoryId).then(data => {\n      console.log(data);\n      setPostContent(data);\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Error in loading post !!\");\n    });\n  }, [categoryId]);\n\n  // Method required for Pagination..\n  const changePage = (pageNumber = 0, pageSize = 5) => {\n    // Conditional logic for pagination..\n    if (pageNumber > postContent.pageNumber && postContent.lastPage) {\n      return;\n    }\n    if (pageNumber < postContent.pageNumber && postContent.pageNumber === 0) {\n      return;\n    }\n    loadPostByCategory().then(data => {\n      setPostContent(data);\n      console.log(data);\n    }).catch(error => {\n      toast.error(\"Error in loading posts !!\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Base, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 2,\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxDEV(CategoryMenu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 10,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center\",\n            children: [\"Blog Count : \", postContent ? postContent.totalElements : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), (_postContent$content = postContent.content) === null || _postContent$content === void 0 ? void 0 : _postContent$content.map(post => (console.log(post), /*#__PURE__*/_jsxDEV(Post, {\n            post: post\n          }, post.postId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))), /*#__PURE__*/_jsxDEV(Container, {\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              size: \"sm\",\n              children: [/*#__PURE__*/_jsxDEV(PaginationItem, {\n                onClick: () => changePage(postContent.pageNumber - 1),\n                disabled: postContent.pageNumber === 0,\n                children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                  previous: true,\n                  children: \"Previous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), [...Array(postContent.totalPages)].map((item, index) => /*#__PURE__*/_jsxDEV(PaginationItem, {\n                active: index === postContent.pageNumber,\n                onClick: () => changePage(index),\n                children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(PaginationItem, {\n                onClick: () => changePage(postContent.pageNumber + 1),\n                disabled: postContent.lastPage,\n                children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                  next: true,\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Categories, \"tkTqBWRXnqDeHlCFGNwyEHr1xDY=\", false, function () {\n  return [useParams];\n});\n_c = Categories;\nexport default Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","useEffect","useState","Base","useParams","Container","Row","Col","Pagination","PaginationItem","PaginationLink","CategoryMenu","loadPostByCategory","toast","Post","jsxDEV","_jsxDEV","Categories","_s","_postContent$content","postContent","setPostContent","content","categoryId","then","data","console","log","catch","error","changePage","pageNumber","pageSize","lastPage","children","className","md","fileName","_jsxFileName","lineNumber","columnNumber","totalElements","map","post","postId","size","onClick","disabled","previous","Array","totalPages","item","index","active","next","_c","$RefreshReg$"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/src/pages/Categories.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Base from \"../components/Base\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n} from \"reactstrap\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport { loadPostByCategory } from \"../services/post_service\";\r\nimport { toast } from \"react-toastify\";\r\nimport Post from \"./../components/Post\";\r\n\r\nconst Categories = () => {\r\n  const [postContent, setPostContent] = useState({\r\n    content: [],\r\n  });\r\n\r\n  const { categoryId } = useParams();\r\n\r\n  useEffect(() => {\r\n    // console.log(categoryId);\r\n    loadPostByCategory(categoryId)\r\n      .then((data) => {\r\n        console.log(data);\r\n        setPostContent(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        toast.error(\"Error in loading post !!\");\r\n      });\r\n  }, [categoryId]);\r\n\r\n  // Method required for Pagination..\r\n  const changePage = (pageNumber = 0, pageSize = 5) => {\r\n    // Conditional logic for pagination..\r\n    if (pageNumber > postContent.pageNumber && postContent.lastPage) {\r\n      return;\r\n    }\r\n    if (pageNumber < postContent.pageNumber && postContent.pageNumber === 0) {\r\n      return;\r\n    }\r\n\r\n    loadPostByCategory()\r\n      .then((data) => {\r\n        setPostContent(data);\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Error in loading posts !!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Base>\r\n      <Container className=\"mt-3\">\r\n        <Row>\r\n          <Col md={2} className=\"mt-5\">\r\n            <CategoryMenu />\r\n          </Col>\r\n          <Col md={10}>\r\n            <h3 className=\"text-center\">\r\n              Blog Count : {postContent ? postContent.totalElements : 0}\r\n            </h3>\r\n\r\n            {postContent.content?.map((post) => (\r\n                console.log(post), \r\n                <Post key={post.postId} post={post} />\r\n              )\r\n            )}\r\n\r\n            {/* {postContent.content?.map((post) => (\r\n              <Post key={index} post={post} />\r\n            ))} */}\r\n\r\n            <Container className=\"mt-3\">\r\n              <Pagination size=\"sm\">\r\n                <PaginationItem\r\n                  onClick={() => changePage(postContent.pageNumber - 1)}\r\n                  disabled={postContent.pageNumber === 0}\r\n                >\r\n                  <PaginationLink previous>Previous</PaginationLink>\r\n                </PaginationItem>\r\n                {[...Array(postContent.totalPages)].map((item, index) => (\r\n                  <PaginationItem\r\n                    active={index === postContent.pageNumber}\r\n                    key={index}\r\n                    onClick={() => changePage(index)}\r\n                  >\r\n                    <PaginationLink>{index + 1}</PaginationLink>\r\n                  </PaginationItem>\r\n                ))}\r\n                <PaginationItem\r\n                  onClick={() => changePage(postContent.pageNumber + 1)}\r\n                  disabled={postContent.lastPage}\r\n                >\r\n                  <PaginationLink next>Next</PaginationLink>\r\n                </PaginationItem>\r\n              </Pagination>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
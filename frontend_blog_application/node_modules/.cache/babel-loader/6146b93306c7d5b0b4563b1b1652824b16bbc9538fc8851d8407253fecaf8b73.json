{"ast":null,"code":"import { privateAxios } from \"./helper\";\nimport { myAxios } from \"./helper\";\n\n// Create post function\nexport const createPost = post => {\n  // console.log(post)\n  return privateAxios.post(`/api/user/${post.userId}/category/${post.categoryId}/posts`, post).then(response => response.data);\n};\n\n// Load all posts...\nexport const getAllPost = (pageNumber, pageSize) => {\n  return myAxios.get(`/api/posts?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=postDate&sortDir=desc`).then(response => response.data);\n};\n\n//Load post by postId\nexport const getPostById = postId => {\n  return myAxios.get(`/api/posts/` + postId).then(response => response.data);\n};\n\n//upload post banner image\nexport const uploadPostImage = (image, postId) => {\n  let formData = new FormData();\n  formData.append(\"image\", image);\n  return privateAxios.post(`/api/post/image/upload/${postId}`, formData).then(response => response.data);\n};\n\n// Load post by category..\nexport const loadPostByCategory = categoryId => {\n  return privateAxios.get(`/api/category/${categoryId}/posts?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=postDate&sortDir=desc`).then(response => response.data);\n};","map":{"version":3,"names":["privateAxios","myAxios","createPost","post","userId","categoryId","then","response","data","getAllPost","pageNumber","pageSize","get","getPostById","postId","uploadPostImage","image","formData","FormData","append","loadPostByCategory"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/src/services/post_service.js"],"sourcesContent":["import { privateAxios } from \"./helper\";\r\nimport { myAxios } from \"./helper\";\r\n\r\n// Create post function\r\nexport const createPost = (post) => {\r\n  // console.log(post)\r\n  return privateAxios\r\n    .post(`/api/user/${post.userId}/category/${post.categoryId}/posts`, post)\r\n    .then((response) => response.data);\r\n};\r\n\r\n// Load all posts...\r\nexport const getAllPost = (pageNumber, pageSize) => {\r\n  return myAxios\r\n    .get(\r\n      `/api/posts?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=postDate&sortDir=desc`\r\n    )\r\n    .then((response) => response.data);\r\n};\r\n\r\n//Load post by postId\r\nexport const getPostById = (postId) => {\r\n  return myAxios.get(`/api/posts/` + postId).then((response) => response.data);\r\n};\r\n\r\n//upload post banner image\r\nexport const uploadPostImage = (image, postId) => {\r\n  let formData = new FormData();\r\n  formData.append(\"image\", image);\r\n  return privateAxios\r\n    .post(`/api/post/image/upload/${postId}`, formData)\r\n    .then((response) => response.data);\r\n};\r\n\r\n// Load post by category..\r\nexport const loadPostByCategory = (categoryId) => {\r\n  return privateAxios\r\n    .get(\r\n      `/api/category/${categoryId}/posts?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=postDate&sortDir=desc`\r\n    )\r\n    .then((response) => response.data);\r\n};\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,UAAU;AACvC,SAASC,OAAO,QAAQ,UAAU;;AAElC;AACA,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAClC;EACA,OAAOH,YAAY,CAChBG,IAAI,CAAC,aAAaA,IAAI,CAACC,MAAM,aAAaD,IAAI,CAACE,UAAU,QAAQ,EAAEF,IAAI,CAAC,CACxEG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAGA,CAACC,UAAU,EAAEC,QAAQ,KAAK;EAClD,OAAOV,OAAO,CACXW,GAAG,CACF,yBAAyBF,UAAU,aAAaC,QAAQ,+BAC1D,CAAC,CACAL,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMK,WAAW,GAAIC,MAAM,IAAK;EACrC,OAAOb,OAAO,CAACW,GAAG,CAAC,aAAa,GAAGE,MAAM,CAAC,CAACR,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AAC9E,CAAC;;AAED;AACA,OAAO,MAAMO,eAAe,GAAGA,CAACC,KAAK,EAAEF,MAAM,KAAK;EAChD,IAAIG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC7BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,KAAK,CAAC;EAC/B,OAAOhB,YAAY,CAChBG,IAAI,CAAC,0BAA0BW,MAAM,EAAE,EAAEG,QAAQ,CAAC,CAClDX,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMY,kBAAkB,GAAIf,UAAU,IAAK;EAChD,OAAOL,YAAY,CAChBY,GAAG,CACF,iBAAiBP,UAAU,qBAAqBK,UAAU,aAAaC,QAAQ,+BACjF,CAAC,CACAL,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
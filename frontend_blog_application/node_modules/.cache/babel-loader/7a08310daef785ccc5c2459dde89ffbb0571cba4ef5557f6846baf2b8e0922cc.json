{"ast":null,"code":"import { privateAxios } from \"./helper\";\nimport { myAxios } from \"./helper\";\n\n// Create post function\nexport const createPost = post => {\n  // console.log(post)\n  return privateAxios.post(`/api/user/${post.userId}/category/${post.categoryId}/posts`, post).then(response => response.data);\n};\n\n//upload post banner image\nexport const uploadPostImage = (image, postId) => {\n  let formData = new FormData();\n  formData.append(\"image\", image);\n  return privateAxios.post(`/api/post/image/upload/${postId}`, formData).then(response => response.data);\n};\n\n// Load all posts...\nexport const getAllPost = (pageNumber, pageSize) => {\n  return myAxios.get(`/api/posts?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=postDate&sortDir=desc`).then(response => response.data);\n};\n\n//Load post by postId\nexport const getPostById = postId => {\n  return myAxios.get(`/api/posts/` + postId).then(response => response.data);\n};\n\n// Load post by category..\nexport const loadPostByCategory = (pageNumber, pageSize, categoryId) => {\n  return myAxios.get(`/api/category/${categoryId}/posts?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=postDate&sortDir=desc`).then(response => response.data);\n};\n\n//load posts of user by user id\nexport const loadPostsByUserId = (pageNumber, pageSize, userId) => {\n  return privateAxios.get(`/api/user/${userId}/posts?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=postDate&sortDir=desc`).then(response => response.data);\n};\n\n// Delete post..\nexport const deletePostByPostId = postId => {\n  return privateAxios.delete(`/api/posts/${postId}`).then(response => response.data);\n};\n\n// Update the post..\nexport const updatePostByPostId = (post, postId) => {\n  console.log(post);\n  return privateAxios.put(`/api/posts/${postId}`, post).then(response => response.data);\n};","map":{"version":3,"names":["privateAxios","myAxios","createPost","post","userId","categoryId","then","response","data","uploadPostImage","image","postId","formData","FormData","append","getAllPost","pageNumber","pageSize","get","getPostById","loadPostByCategory","loadPostsByUserId","deletePostByPostId","delete","updatePostByPostId","console","log","put"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/src/services/post_service.js"],"sourcesContent":["import { privateAxios } from \"./helper\";\r\nimport { myAxios } from \"./helper\";\r\n\r\n// Create post function\r\nexport const createPost = (post) => {\r\n  // console.log(post)\r\n  return privateAxios\r\n    .post(`/api/user/${post.userId}/category/${post.categoryId}/posts`, post)\r\n    .then((response) => response.data);\r\n};\r\n\r\n//upload post banner image\r\nexport const uploadPostImage = (image, postId) => {\r\n  let formData = new FormData();\r\n  formData.append(\"image\", image);\r\n  return privateAxios\r\n    .post(`/api/post/image/upload/${postId}`, formData)\r\n    .then((response) => response.data);\r\n};\r\n\r\n// Load all posts...\r\nexport const getAllPost = (pageNumber, pageSize) => {\r\n  return myAxios\r\n    .get(\r\n      `/api/posts?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=postDate&sortDir=desc`\r\n    )\r\n    .then((response) => response.data);\r\n};\r\n\r\n//Load post by postId\r\nexport const getPostById = (postId) => {\r\n  return myAxios.get(`/api/posts/` + postId).then((response) => response.data);\r\n};\r\n\r\n// Load post by category..\r\nexport const loadPostByCategory = (pageNumber, pageSize, categoryId) => {\r\n  return myAxios\r\n    .get(\r\n      `/api/category/${categoryId}/posts?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=postDate&sortDir=desc`\r\n    )\r\n    .then((response) => response.data);\r\n};\r\n\r\n//load posts of user by user id\r\nexport const loadPostsByUserId = (pageNumber, pageSize, userId) => {\r\n  return privateAxios\r\n    .get(\r\n      `/api/user/${userId}/posts?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=postDate&sortDir=desc`\r\n    )\r\n    .then((response) => response.data);\r\n};\r\n\r\n// Delete post..\r\nexport const deletePostByPostId = (postId) => {\r\n  return privateAxios\r\n    .delete(`/api/posts/${postId}`)\r\n    .then((response) => response.data);\r\n};\r\n\r\n// Update the post..\r\nexport const updatePostByPostId = (post, postId) => {\r\n  console.log(post)\r\n  return privateAxios\r\n    .put(`/api/posts/${postId}`,post)\r\n    .then((response) => response.data);\r\n};\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,UAAU;AACvC,SAASC,OAAO,QAAQ,UAAU;;AAElC;AACA,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAClC;EACA,OAAOH,YAAY,CAChBG,IAAI,CAAC,aAAaA,IAAI,CAACC,MAAM,aAAaD,IAAI,CAACE,UAAU,QAAQ,EAAEF,IAAI,CAAC,CACxEG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAChD,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC7BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;EAC/B,OAAOV,YAAY,CAChBG,IAAI,CAAC,0BAA0BQ,MAAM,EAAE,EAAEC,QAAQ,CAAC,CAClDN,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMO,UAAU,GAAGA,CAACC,UAAU,EAAEC,QAAQ,KAAK;EAClD,OAAOhB,OAAO,CACXiB,GAAG,CACF,yBAAyBF,UAAU,aAAaC,QAAQ,+BAC1D,CAAC,CACAX,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMW,WAAW,GAAIR,MAAM,IAAK;EACrC,OAAOV,OAAO,CAACiB,GAAG,CAAC,aAAa,GAAGP,MAAM,CAAC,CAACL,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AAC9E,CAAC;;AAED;AACA,OAAO,MAAMY,kBAAkB,GAAGA,CAACJ,UAAU,EAAEC,QAAQ,EAAEZ,UAAU,KAAK;EACtE,OAAOJ,OAAO,CACXiB,GAAG,CACF,iBAAiBb,UAAU,qBAAqBW,UAAU,aAAaC,QAAQ,+BACjF,CAAC,CACAX,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMa,iBAAiB,GAAGA,CAACL,UAAU,EAAEC,QAAQ,EAAEb,MAAM,KAAK;EACjE,OAAOJ,YAAY,CAChBkB,GAAG,CACF,aAAad,MAAM,qBAAqBY,UAAU,aAAaC,QAAQ,+BACzE,CAAC,CACAX,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMc,kBAAkB,GAAIX,MAAM,IAAK;EAC5C,OAAOX,YAAY,CAChBuB,MAAM,CAAC,cAAcZ,MAAM,EAAE,CAAC,CAC9BL,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMgB,kBAAkB,GAAGA,CAACrB,IAAI,EAAEQ,MAAM,KAAK;EAClDc,OAAO,CAACC,GAAG,CAACvB,IAAI,CAAC;EACjB,OAAOH,YAAY,CAChB2B,GAAG,CAAC,cAAchB,MAAM,EAAE,EAACR,IAAI,CAAC,CAChCG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
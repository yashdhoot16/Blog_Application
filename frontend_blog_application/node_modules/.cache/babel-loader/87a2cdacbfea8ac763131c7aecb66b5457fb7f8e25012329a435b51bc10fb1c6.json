{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { isFunction } from \"../checker/is-function.js\";\nexport const keepNames = new Map();\nexport const getClassName = obj => {\n  var _a;\n  if (isFunction(obj.className)) {\n    return obj.className();\n  }\n  const constructor = ((_a = obj.constructor) === null || _a === void 0 ? void 0 : _a.originalConstructor) || obj.constructor;\n  if (keepNames.has(constructor)) {\n    return keepNames.get(constructor);\n  }\n  if (constructor.name) {\n    return constructor.name;\n  }\n  const regex = new RegExp(/^\\s*function\\s*(\\S*)\\s*\\(/);\n  const res = constructor.toString().match(regex);\n  return res ? res[1] : '';\n};","map":{"version":3,"names":["isFunction","keepNames","Map","getClassName","obj","_a","className","constructor","originalConstructor","has","get","name","regex","RegExp","res","toString","match"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/helpers/utils/get-class-name.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { isFunction } from \"../checker/is-function.js\";\nexport const keepNames = new Map();\nexport const getClassName = (obj) => {\n    var _a;\n    if (isFunction(obj.className)) {\n        return obj.className();\n    }\n    const constructor = ((_a = obj.constructor) === null || _a === void 0 ? void 0 : _a.originalConstructor) || obj.constructor;\n    if (keepNames.has(constructor)) {\n        return keepNames.get(constructor);\n    }\n    if (constructor.name) {\n        return constructor.name;\n    }\n    const regex = new RegExp(/^\\s*function\\s*(\\S*)\\s*\\(/);\n    const res = constructor.toString().match(regex);\n    return res ? res[1] : '';\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,2BAA2B;AACtD,OAAO,MAAMC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;AAClC,OAAO,MAAMC,YAAY,GAAIC,GAAG,IAAK;EACjC,IAAIC,EAAE;EACN,IAAIL,UAAU,CAACI,GAAG,CAACE,SAAS,CAAC,EAAE;IAC3B,OAAOF,GAAG,CAACE,SAAS,CAAC,CAAC;EAC1B;EACA,MAAMC,WAAW,GAAG,CAAC,CAACF,EAAE,GAAGD,GAAG,CAACG,WAAW,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,mBAAmB,KAAKJ,GAAG,CAACG,WAAW;EAC3H,IAAIN,SAAS,CAACQ,GAAG,CAACF,WAAW,CAAC,EAAE;IAC5B,OAAON,SAAS,CAACS,GAAG,CAACH,WAAW,CAAC;EACrC;EACA,IAAIA,WAAW,CAACI,IAAI,EAAE;IAClB,OAAOJ,WAAW,CAACI,IAAI;EAC3B;EACA,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAAC,2BAA2B,CAAC;EACrD,MAAMC,GAAG,GAAGP,WAAW,CAACQ,QAAQ,CAAC,CAAC,CAACC,KAAK,CAACJ,KAAK,CAAC;EAC/C,OAAOE,GAAG,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
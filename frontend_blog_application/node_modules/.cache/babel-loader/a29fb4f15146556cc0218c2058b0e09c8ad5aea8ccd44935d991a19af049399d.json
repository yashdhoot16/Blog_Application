{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\n/**\n * Decorate components and set status isReady after constructor\n * @param constructorFunction - Component constructor class\n */\nexport function component(constructorFunction) {\n  class newConstructorFunction extends constructorFunction {\n    constructor(...args) {\n      super(...args);\n      const isRootConstructor = this.constructor === newConstructorFunction;\n      // We can add a decorator to multiple classes in a chain.\n      // Status should be set only as root\n      if (isRootConstructor) {\n        // In some es/minimizer builds, JS instantiates the original class rather than the new constructor\n        if (!(this instanceof newConstructorFunction)) {\n          Object.setPrototypeOf(this, newConstructorFunction.prototype);\n        }\n        this.setStatus('ready');\n      }\n    }\n  }\n  return newConstructorFunction;\n}","map":{"version":3,"names":["component","constructorFunction","newConstructorFunction","constructor","args","isRootConstructor","Object","setPrototypeOf","prototype","setStatus"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/decorators/component/component.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\n/**\n * Decorate components and set status isReady after constructor\n * @param constructorFunction - Component constructor class\n */\nexport function component(constructorFunction) {\n    class newConstructorFunction extends constructorFunction {\n        constructor(...args) {\n            super(...args);\n            const isRootConstructor = this.constructor === newConstructorFunction;\n            // We can add a decorator to multiple classes in a chain.\n            // Status should be set only as root\n            if (isRootConstructor) {\n                // In some es/minimizer builds, JS instantiates the original class rather than the new constructor\n                if (!(this instanceof newConstructorFunction)) {\n                    Object.setPrototypeOf(this, newConstructorFunction.prototype);\n                }\n                this.setStatus('ready');\n            }\n        }\n    }\n    return newConstructorFunction;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAASA,CAACC,mBAAmB,EAAE;EAC3C,MAAMC,sBAAsB,SAASD,mBAAmB,CAAC;IACrDE,WAAWA,CAAC,GAAGC,IAAI,EAAE;MACjB,KAAK,CAAC,GAAGA,IAAI,CAAC;MACd,MAAMC,iBAAiB,GAAG,IAAI,CAACF,WAAW,KAAKD,sBAAsB;MACrE;MACA;MACA,IAAIG,iBAAiB,EAAE;QACnB;QACA,IAAI,EAAE,IAAI,YAAYH,sBAAsB,CAAC,EAAE;UAC3CI,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEL,sBAAsB,CAACM,SAAS,CAAC;QACjE;QACA,IAAI,CAACC,SAAS,CAAC,OAAO,CAAC;MAC3B;IACJ;EACJ;EACA,OAAOP,sBAAsB;AACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
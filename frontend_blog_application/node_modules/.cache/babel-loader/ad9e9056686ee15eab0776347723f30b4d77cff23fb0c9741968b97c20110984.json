{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { STATUSES } from \"../../component/statuses.js\";\nimport { observable } from \"../../event-emitter/observable.js\";\nimport { splitArray } from \"../../helpers/array/split-array.js\";\nimport { isFunction } from \"../../helpers/checker/is-function.js\";\nimport { isPlainObject } from \"../../helpers/checker/is-plain-object.js\";\nimport { isViewObject } from \"../../helpers/checker/is-view-object.js\";\nimport { error } from \"../../helpers/utils/error/index.js\";\nexport function getPropertyDescriptor(obj, prop) {\n  let desc;\n  do {\n    desc = Object.getOwnPropertyDescriptor(obj, prop);\n    obj = Object.getPrototypeOf(obj);\n  } while (!desc && obj);\n  return desc;\n}\n/**\n * Watch decorator. Added observer for some change in field value\n */\nexport function watch(observeFields, opts) {\n  return (target, propertyKey) => {\n    var _a;\n    if (!isFunction(target[propertyKey])) {\n      throw error('Handler must be a Function');\n    }\n    const immediately = (_a = opts === null || opts === void 0 ? void 0 : opts.immediately) !== null && _a !== void 0 ? _a : true;\n    const context = opts === null || opts === void 0 ? void 0 : opts.context;\n    const process = component => {\n      const view = isViewObject(component) ? component : component.jodit;\n      let callback = (key, ...args) => {\n        if (component.isInDestruct) {\n          return;\n        }\n        return component[propertyKey](key, ...args);\n      };\n      if (!immediately) {\n        callback = component.async.microDebounce(callback, true);\n      }\n      splitArray(observeFields).forEach(field => {\n        if (/:/.test(field)) {\n          const [objectPath, eventName] = field.split(':');\n          let ctx = context;\n          if (objectPath.length) {\n            ctx = component.get(objectPath);\n          }\n          if (isFunction(ctx)) {\n            ctx = ctx(component);\n          }\n          view.events.on(ctx || component, eventName, callback);\n          if (!ctx) {\n            view.events.on(eventName, callback);\n          }\n          component.hookStatus('beforeDestruct', () => {\n            view.events.off(ctx || component, eventName, callback).off(eventName, callback);\n          });\n          return;\n        }\n        const parts = field.split('.'),\n          [key] = parts,\n          teil = parts.slice(1);\n        let value = component[key];\n        if (isPlainObject(value)) {\n          const observableValue = observable(value);\n          observableValue.on(`change.${teil.join('.')}`, callback);\n        }\n        const descriptor = getPropertyDescriptor(target, key);\n        Object.defineProperty(component, key, {\n          configurable: true,\n          set(v) {\n            const oldValue = value;\n            if (oldValue === v) {\n              return;\n            }\n            value = v;\n            if (descriptor && descriptor.set) {\n              descriptor.set.call(component, v);\n            }\n            if (isPlainObject(value)) {\n              value = observable(value);\n              value.on(`change.${teil.join('.')}`, callback);\n            }\n            callback(key, oldValue, value);\n          },\n          get() {\n            if (descriptor && descriptor.get) {\n              return descriptor.get.call(component);\n            }\n            return value;\n          }\n        });\n      });\n    };\n    if (isFunction(target.hookStatus)) {\n      target.hookStatus(STATUSES.ready, process);\n    } else {\n      process(target);\n    }\n  };\n}","map":{"version":3,"names":["STATUSES","observable","splitArray","isFunction","isPlainObject","isViewObject","error","getPropertyDescriptor","obj","prop","desc","Object","getOwnPropertyDescriptor","getPrototypeOf","watch","observeFields","opts","target","propertyKey","_a","immediately","context","process","component","view","jodit","callback","key","args","isInDestruct","async","microDebounce","forEach","field","test","objectPath","eventName","split","ctx","length","get","events","on","hookStatus","off","parts","teil","slice","value","observableValue","join","descriptor","defineProperty","configurable","set","v","oldValue","call","ready"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/decorators/watch/watch.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { STATUSES } from \"../../component/statuses.js\";\nimport { observable } from \"../../event-emitter/observable.js\";\nimport { splitArray } from \"../../helpers/array/split-array.js\";\nimport { isFunction } from \"../../helpers/checker/is-function.js\";\nimport { isPlainObject } from \"../../helpers/checker/is-plain-object.js\";\nimport { isViewObject } from \"../../helpers/checker/is-view-object.js\";\nimport { error } from \"../../helpers/utils/error/index.js\";\nexport function getPropertyDescriptor(obj, prop) {\n    let desc;\n    do {\n        desc = Object.getOwnPropertyDescriptor(obj, prop);\n        obj = Object.getPrototypeOf(obj);\n    } while (!desc && obj);\n    return desc;\n}\n/**\n * Watch decorator. Added observer for some change in field value\n */\nexport function watch(observeFields, opts) {\n    return (target, propertyKey) => {\n        var _a;\n        if (!isFunction(target[propertyKey])) {\n            throw error('Handler must be a Function');\n        }\n        const immediately = (_a = opts === null || opts === void 0 ? void 0 : opts.immediately) !== null && _a !== void 0 ? _a : true;\n        const context = opts === null || opts === void 0 ? void 0 : opts.context;\n        const process = (component) => {\n            const view = isViewObject(component)\n                ? component\n                : component.jodit;\n            let callback = (key, ...args) => {\n                if (component.isInDestruct) {\n                    return;\n                }\n                return component[propertyKey](key, ...args);\n            };\n            if (!immediately) {\n                callback = component.async.microDebounce(callback, true);\n            }\n            splitArray(observeFields).forEach(field => {\n                if (/:/.test(field)) {\n                    const [objectPath, eventName] = field.split(':');\n                    let ctx = context;\n                    if (objectPath.length) {\n                        ctx = component.get(objectPath);\n                    }\n                    if (isFunction(ctx)) {\n                        ctx = ctx(component);\n                    }\n                    view.events.on(ctx || component, eventName, callback);\n                    if (!ctx) {\n                        view.events.on(eventName, callback);\n                    }\n                    component.hookStatus('beforeDestruct', () => {\n                        view.events\n                            .off(ctx || component, eventName, callback)\n                            .off(eventName, callback);\n                    });\n                    return;\n                }\n                const parts = field.split('.'), [key] = parts, teil = parts.slice(1);\n                let value = component[key];\n                if (isPlainObject(value)) {\n                    const observableValue = observable(value);\n                    observableValue.on(`change.${teil.join('.')}`, callback);\n                }\n                const descriptor = getPropertyDescriptor(target, key);\n                Object.defineProperty(component, key, {\n                    configurable: true,\n                    set(v) {\n                        const oldValue = value;\n                        if (oldValue === v) {\n                            return;\n                        }\n                        value = v;\n                        if (descriptor && descriptor.set) {\n                            descriptor.set.call(component, v);\n                        }\n                        if (isPlainObject(value)) {\n                            value = observable(value);\n                            value.on(`change.${teil.join('.')}`, callback);\n                        }\n                        callback(key, oldValue, value);\n                    },\n                    get() {\n                        if (descriptor && descriptor.get) {\n                            return descriptor.get.call(component);\n                        }\n                        return value;\n                    }\n                });\n            });\n        };\n        if (isFunction(target.hookStatus)) {\n            target.hookStatus(STATUSES.ready, process);\n        }\n        else {\n            process(target);\n        }\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
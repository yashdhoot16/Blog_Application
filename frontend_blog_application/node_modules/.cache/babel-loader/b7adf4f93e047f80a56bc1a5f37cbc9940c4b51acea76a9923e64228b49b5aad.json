{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YDHOOT\\\\Documents\\\\Spring Tool Suite Projects\\\\BlogApplication\\\\frontend_blog_application\\\\src\\\\components\\\\NewFeed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getAllPost, deletePostByPostId } from \"../services/post_service\";\nimport { Container, Row, Col, Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport Post from \"./Post\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewFeed = () => {\n  _s();\n  var _postContent$content;\n  const [postContent, setPostContent] = useState({\n    content: [],\n    pageNumber: \"\",\n    pageSize: \"\",\n    totalPages: \"\",\n    totalElements: \"\",\n    lastPage: false\n  });\n  useEffect(() => {\n    // load all posts from server..\n    getAllPost(0, postContent.pageSize = 5).then(data => {\n      // console.log(data);\n      setPostContent(data);\n    }).catch(error => {\n      // console.log(error);\n      toast.error(\"Error in loading posts !!\");\n    });\n  }, []);\n\n  // Method required for Pagination..\n  const changePage = (pageNumber = 0, pageSize = 5) => {\n    // Conditional logic for pagination..\n    if (pageNumber > postContent.pageNumber && postContent.lastPage) {\n      return;\n    }\n    if (pageNumber < postContent.pageNumber && postContent.pageNumber === 0) {\n      return;\n    }\n    getAllPost(pageNumber, pageSize).then(data => {\n      setPostContent(data);\n      console.log(data);\n    }).catch(error => {\n      toast.error(\"Error in loading posts !!\");\n    });\n  };\n\n  // Function to delete the post...\n  const deletePost = post => {\n    //Method from post-service.js to delete the user by PostId\n    deletePostByPostId(post.postId).then(data => {\n      console.log(data);\n      toast.success(\"Post deleted !!\");\n\n      //Loading data after post is deleted..\n      let newPostContent = postContent.content.filter(p => p.postId != post.postId);\n      setPostContent(newPostContent);\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"Post can not be deleted !!\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          size: 12\n          // offset: 1,\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: [\"Blog Count : \", postContent ? postContent.totalElements : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), (_postContent$content = postContent.content) === null || _postContent$content === void 0 ? void 0 : _postContent$content.map(post => /*#__PURE__*/_jsxDEV(Post, {\n          post: post,\n          deletePost: deletePost\n        }, post.postId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(PaginationItem, {\n              onClick: () => changePage(postContent.pageNumber - 1),\n              disabled: postContent.pageNumber === 0,\n              children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                previous: true,\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), [...Array(postContent.totalPages)].map((item, index) => /*#__PURE__*/_jsxDEV(PaginationItem, {\n              active: index === postContent.pageNumber,\n              onClick: () => changePage(index),\n              children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(PaginationItem, {\n              onClick: () => changePage(postContent.pageNumber + 1),\n              disabled: postContent.lastPage,\n              children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                next: true,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(NewFeed, \"fHBmXy2NHJtX0WSbnSYGe3P9CJA=\");\n_c = NewFeed;\nexport default NewFeed;\nvar _c;\n$RefreshReg$(_c, \"NewFeed\");","map":{"version":3,"names":["React","useEffect","useState","getAllPost","deletePostByPostId","Container","Row","Col","Pagination","PaginationItem","PaginationLink","Post","toast","jsxDEV","_jsxDEV","NewFeed","_s","_postContent$content","postContent","setPostContent","content","pageNumber","pageSize","totalPages","totalElements","lastPage","then","data","catch","error","changePage","console","log","deletePost","post","postId","success","newPostContent","filter","p","children","className","md","size","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","disabled","previous","Array","item","index","active","next","_c","$RefreshReg$"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/src/components/NewFeed.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getAllPost, deletePostByPostId } from \"../services/post_service\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n} from \"reactstrap\";\r\nimport Post from \"./Post\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst NewFeed = () => {\r\n  const [postContent, setPostContent] = useState({\r\n    content: [],\r\n    pageNumber: \"\",\r\n    pageSize: \"\",\r\n    totalPages: \"\",\r\n    totalElements: \"\",\r\n    lastPage: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // load all posts from server..\r\n    getAllPost(0, (postContent.pageSize = 5))\r\n      .then((data) => {\r\n        // console.log(data);\r\n        setPostContent(data);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error);\r\n        toast.error(\"Error in loading posts !!\");\r\n      });\r\n  }, []);\r\n\r\n  // Method required for Pagination..\r\n  const changePage = (pageNumber = 0, pageSize = 5) => {\r\n    // Conditional logic for pagination..\r\n    if (pageNumber > postContent.pageNumber && postContent.lastPage) {\r\n      return;\r\n    }\r\n    if (pageNumber < postContent.pageNumber && postContent.pageNumber === 0) {\r\n      return;\r\n    }\r\n\r\n    getAllPost(pageNumber, pageSize)\r\n      .then((data) => {\r\n        setPostContent(data);\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Error in loading posts !!\");\r\n      });\r\n  };\r\n\r\n  // Function to delete the post...\r\n  const deletePost = (post) => {\r\n    //Method from post-service.js to delete the user by PostId\r\n    deletePostByPostId(post.postId)\r\n      .then((data) => {\r\n        console.log(data);\r\n        toast.success(\"Post deleted !!\");\r\n\r\n        //Loading data after post is deleted..\r\n        let newPostContent = postContent.content.filter(\r\n          (p) => p.postId != post.postId\r\n        );\r\n        setPostContent(newPostContent);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        toast.error(\"Post can not be deleted !!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"\">\r\n        <Col\r\n          md={{\r\n            size: 12,\r\n            // offset: 1,\r\n          }}\r\n        >\r\n          <h3 className=\"text-center\">\r\n            Blog Count : {postContent ? postContent.totalElements : 0}\r\n          </h3>\r\n\r\n          {postContent.content?.map((post) => (\r\n            <Post key={post.postId} post={post} deletePost={deletePost} />\r\n          ))}\r\n\r\n          <Container className=\"mt-3\">\r\n            <Pagination size=\"sm\">\r\n              <PaginationItem\r\n                onClick={() => changePage(postContent.pageNumber - 1)}\r\n                disabled={postContent.pageNumber === 0}\r\n              >\r\n                <PaginationLink previous>Previous</PaginationLink>\r\n              </PaginationItem>\r\n              {[...Array(postContent.totalPages)].map((item, index) => (\r\n                <PaginationItem\r\n                  active={index === postContent.pageNumber}\r\n                  key={index}\r\n                  onClick={() => changePage(index)}\r\n                >\r\n                  <PaginationLink>{index + 1}</PaginationLink>\r\n                </PaginationItem>\r\n              ))}\r\n              <PaginationItem\r\n                onClick={() => changePage(postContent.pageNumber + 1)}\r\n                disabled={postContent.lastPage}\r\n              >\r\n                <PaginationLink next>Next</PaginationLink>\r\n              </PaginationItem>\r\n            </Pagination>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
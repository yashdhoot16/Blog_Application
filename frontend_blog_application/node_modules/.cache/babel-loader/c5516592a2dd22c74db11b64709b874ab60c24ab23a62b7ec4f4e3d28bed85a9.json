{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { IS_ES_NEXT } from \"../constants.js\";\nimport { clearTimeout, setTimeout } from \"../helpers/async/index.js\";\nimport { isAbortError } from \"../helpers/checker/is-abort-error.js\";\nimport { isFunction } from \"../helpers/checker/is-function.js\";\nimport { isNumber } from \"../helpers/checker/is-number.js\";\nimport { isPlainObject } from \"../helpers/checker/is-plain-object.js\";\nimport { isPromise } from \"../helpers/checker/is-promise.js\";\nimport { isString } from \"../helpers/checker/is-string.js\";\nimport { isVoid } from \"../helpers/checker/is-void.js\";\nimport { assert } from \"../helpers/utils/assert.js\";\nimport { abort } from \"../helpers/utils/error/errors/abort-error.js\";\nexport class Async {\n  constructor() {\n    var _a, _b, _c, _d, _e;\n    this.timers = new Map();\n    this.__callbacks = new Map();\n    this.__queueMicrotaskNative = (_a = queueMicrotask === null || queueMicrotask === void 0 ? void 0 : queueMicrotask.bind(window)) !== null && _a !== void 0 ? _a : Promise.resolve().then.bind(Promise.resolve());\n    this.promisesRejections = new Set();\n    this.__requestsIdle = new Set();\n    this.__controllers = new Set();\n    this.__requestsRaf = new Set();\n    this.__requestIdleCallbackNative = (_c = (_b = window['requestIdleCallback']) === null || _b === void 0 ? void 0 : _b.bind(window)) !== null && _c !== void 0 ? _c : (callback, options) => {\n      var _a;\n      const start = Date.now();\n      return this.setTimeout(() => {\n        callback({\n          didTimeout: false,\n          timeRemaining: () => Math.max(0, 50 - (Date.now() - start))\n        });\n      }, (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : 1);\n    };\n    this.__cancelIdleCallbackNative = (_e = (_d = window['cancelIdleCallback']) === null || _d === void 0 ? void 0 : _d.bind(window)) !== null && _e !== void 0 ? _e : request => {\n      this.clearTimeout(request);\n    };\n    this.isDestructed = false;\n  }\n  delay(timeout) {\n    return this.promise(resolve => this.setTimeout(resolve, timeout));\n  }\n  setTimeout(callback, timeout, ...args) {\n    if (this.isDestructed) {\n      return 0;\n    }\n    let options = {};\n    if (isVoid(timeout)) {\n      timeout = 0;\n    }\n    if (!isNumber(timeout)) {\n      options = timeout;\n      timeout = options.timeout || 0;\n    }\n    if (options.label) {\n      this.clearLabel(options.label);\n    }\n    const timer = setTimeout(callback, timeout, ...args);\n    const key = options.label || timer;\n    this.timers.set(key, timer);\n    this.__callbacks.set(key, callback);\n    return timer;\n  }\n  updateTimeout(label, timeout) {\n    assert(label && this.timers.has(label), 'Label does not exist');\n    if (!label || !this.timers.has(label)) {\n      return null;\n    }\n    const callback = this.__callbacks.get(label);\n    assert(isFunction(callback), 'Callback is not a function');\n    return this.setTimeout(callback, {\n      label,\n      timeout\n    });\n  }\n  clearLabel(label) {\n    if (label && this.timers.has(label)) {\n      clearTimeout(this.timers.get(label));\n      this.timers.delete(label);\n      this.__callbacks.delete(label);\n    }\n  }\n  clearTimeout(timerOrLabel) {\n    if (isString(timerOrLabel)) {\n      return this.clearLabel(timerOrLabel);\n    }\n    clearTimeout(timerOrLabel);\n    this.timers.delete(timerOrLabel);\n    this.__callbacks.delete(timerOrLabel);\n  }\n  /**\n   * Debouncing enforces that a function not be called again until a certain amount of time has passed without\n   * it being called. As in \"execute this function only if 100 milliseconds have passed without it being called.\"\n   *\n   * @example\n   * ```javascript\n   * var jodit = Jodit.make('.editor');\n   * jodit.e.on('mousemove', jodit.async.debounce(() => {\n   * \t// Do expensive things\n   * }, 100));\n   * ```\n   */\n  debounce(fn, timeout, firstCallImmediately = false) {\n    let timer = 0,\n      fired = false;\n    const promises = [];\n    const callFn = (...args) => {\n      if (!fired) {\n        timer = 0;\n        const res = fn(...args);\n        fired = true;\n        if (promises.length) {\n          const runPromises = () => {\n            promises.forEach(res => res());\n            promises.length = 0;\n          };\n          isPromise(res) ? res.finally(runPromises) : runPromises();\n        }\n      }\n    };\n    const onFire = (...args) => {\n      fired = false;\n      if (!timeout) {\n        callFn(...args);\n      } else {\n        if (!timer && firstCallImmediately) {\n          callFn(...args);\n        }\n        clearTimeout(timer);\n        timer = this.setTimeout(() => callFn(...args), isFunction(timeout) ? timeout() : timeout);\n        this.timers.set(fn, timer);\n      }\n    };\n    return isPlainObject(timeout) && timeout.promisify ? (...args) => {\n      const promise = this.promise(res => {\n        promises.push(res);\n      }).catch(e => {\n        if (isAbortError(e)) {\n          return null;\n        }\n        throw e;\n      });\n      onFire(...args);\n      return promise;\n    } : onFire;\n  }\n  microDebounce(fn, firstCallImmediately = false) {\n    let scheduled = false;\n    let needCall = true;\n    let savedArgs;\n    return (...args) => {\n      savedArgs = args;\n      if (scheduled) {\n        needCall = true;\n        return;\n      }\n      needCall = true;\n      if (firstCallImmediately) {\n        needCall = false;\n        fn(...savedArgs);\n      }\n      scheduled = true;\n      this.__queueMicrotaskNative(() => {\n        scheduled = false;\n        if (this.isDestructed) {\n          return;\n        }\n        needCall && fn(...savedArgs);\n      });\n    };\n  }\n  /**\n   * Throttling enforces a maximum number of times a function can be called over time.\n   * As in \"execute this function at most once every 100 milliseconds.\"\n   *\n   * @example\n   * ```javascript\n   * var jodit = Jodit.make('.editor');\n   * jodit.e.on(document.body, 'scroll', jodit.async.throttle(function() {\n   * \t// Do expensive things\n   * }, 100));\n   * ```\n   */\n  throttle(fn, timeout, ignore = false) {\n    let timer = null,\n      needInvoke,\n      callee,\n      lastArgs;\n    return (...args) => {\n      needInvoke = true;\n      lastArgs = args;\n      if (!timeout) {\n        fn(...lastArgs);\n        return;\n      }\n      if (!timer) {\n        callee = () => {\n          if (needInvoke) {\n            fn(...lastArgs);\n            needInvoke = false;\n            timer = this.setTimeout(callee, isFunction(timeout) ? timeout() : timeout);\n            this.timers.set(callee, timer);\n          } else {\n            timer = null;\n          }\n        };\n        callee();\n      }\n    };\n  }\n  promise(executor) {\n    let rejectCallback = () => {};\n    const promise = new Promise((resolve, reject) => {\n      rejectCallback = () => reject(abort('Abort async'));\n      this.promisesRejections.add(rejectCallback);\n      executor(resolve, reject);\n    });\n    if (!promise.finally && typeof process !== 'undefined' && !IS_ES_NEXT) {\n      promise.finally = onfinally => {\n        promise.then(onfinally).catch(onfinally);\n        return promise;\n      };\n    }\n    promise.finally(() => {\n      this.promisesRejections.delete(rejectCallback);\n    }).catch(() => null);\n    promise.rejectCallback = rejectCallback;\n    return promise;\n  }\n  /**\n   * Get Promise status\n   */\n  promiseState(p) {\n    if (p.status) {\n      return p.status;\n    }\n    // Hi IE11\n    if (!Promise.race) {\n      return new Promise(resolve => {\n        p.then(v => {\n          resolve('fulfilled');\n          return v;\n        }, e => {\n          resolve('rejected');\n          throw e;\n        });\n        this.setTimeout(() => {\n          resolve('pending');\n        }, 100);\n      });\n    }\n    const t = {};\n    return Promise.race([p, t]).then(v => v === t ? 'pending' : 'fulfilled', () => 'rejected');\n  }\n  requestIdleCallback(callback, options = {\n    timeout: 100\n  }) {\n    const request = this.__requestIdleCallbackNative(callback, options);\n    this.__requestsIdle.add(request);\n    return request;\n  }\n  requestIdlePromise(options) {\n    return this.promise(res => {\n      const request = this.requestIdleCallback(() => res(request), options);\n    });\n  }\n  /**\n   * Try to use scheduler.postTask if it is available https://wicg.github.io/scheduling-apis/\n   */\n  schedulerPostTask(task, options = {\n    delay: 0,\n    priority: 'user-visible'\n  }) {\n    const controller = new AbortController();\n    if (options.signal) {\n      options.signal.addEventListener('abort', () => controller.abort());\n    }\n    this.__controllers.add(controller);\n    // @ts-ignore\n    if (typeof globalThis.scheduler !== 'undefined') {\n      const scheduler = globalThis.scheduler;\n      const promise = scheduler.postTask(task, {\n        ...options,\n        signal: controller.signal\n      });\n      promise.finally(() => {\n        this.__controllers.delete(controller);\n      }).catch(() => null);\n      return promise;\n    }\n    return this.promise((resolve, reject) => {\n      const timeout = this.setTimeout(() => {\n        try {\n          resolve(task());\n        } catch (e) {\n          reject(e);\n        }\n        this.__controllers.delete(controller);\n      }, options.delay || 1);\n      controller.signal.addEventListener('abort', () => {\n        this.clearTimeout(timeout);\n        this.__controllers.delete(controller);\n        reject(abort());\n      });\n    });\n  }\n  schedulerYield() {\n    return this.schedulerPostTask(() => {}, {\n      priority: 'user-visible'\n    });\n  }\n  cancelIdleCallback(request) {\n    this.__requestsIdle.delete(request);\n    return this.__cancelIdleCallbackNative(request);\n  }\n  requestAnimationFrame(callback) {\n    const request = requestAnimationFrame(callback);\n    this.__requestsRaf.add(request);\n    return request;\n  }\n  cancelAnimationFrame(request) {\n    this.__requestsRaf.delete(request);\n    cancelAnimationFrame(request);\n  }\n  clear() {\n    this.__requestsIdle.forEach(key => this.cancelIdleCallback(key));\n    this.__requestsRaf.forEach(key => this.cancelAnimationFrame(key));\n    this.__controllers.forEach(controller => controller.abort());\n    this.timers.forEach(key => clearTimeout(this.timers.get(key)));\n    this.timers.clear();\n    this.promisesRejections.forEach(reject => reject());\n    this.promisesRejections.clear();\n  }\n  destruct() {\n    this.clear();\n    this.isDestructed = true;\n  }\n}","map":{"version":3,"names":["IS_ES_NEXT","clearTimeout","setTimeout","isAbortError","isFunction","isNumber","isPlainObject","isPromise","isString","isVoid","assert","abort","Async","constructor","_a","_b","_c","_d","_e","timers","Map","__callbacks","__queueMicrotaskNative","queueMicrotask","bind","window","Promise","resolve","then","promisesRejections","Set","__requestsIdle","__controllers","__requestsRaf","__requestIdleCallbackNative","callback","options","start","Date","now","didTimeout","timeRemaining","Math","max","timeout","__cancelIdleCallbackNative","request","isDestructed","delay","promise","args","label","clearLabel","timer","key","set","updateTimeout","has","get","delete","timerOrLabel","debounce","fn","firstCallImmediately","fired","promises","callFn","res","length","runPromises","forEach","finally","onFire","promisify","push","catch","e","microDebounce","scheduled","needCall","savedArgs","throttle","ignore","needInvoke","callee","lastArgs","executor","rejectCallback","reject","add","process","onfinally","promiseState","p","status","race","v","t","requestIdleCallback","requestIdlePromise","schedulerPostTask","task","priority","controller","AbortController","signal","addEventListener","globalThis","scheduler","postTask","schedulerYield","cancelIdleCallback","requestAnimationFrame","cancelAnimationFrame","clear","destruct"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/async/async.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { IS_ES_NEXT } from \"../constants.js\";\nimport { clearTimeout, setTimeout } from \"../helpers/async/index.js\";\nimport { isAbortError } from \"../helpers/checker/is-abort-error.js\";\nimport { isFunction } from \"../helpers/checker/is-function.js\";\nimport { isNumber } from \"../helpers/checker/is-number.js\";\nimport { isPlainObject } from \"../helpers/checker/is-plain-object.js\";\nimport { isPromise } from \"../helpers/checker/is-promise.js\";\nimport { isString } from \"../helpers/checker/is-string.js\";\nimport { isVoid } from \"../helpers/checker/is-void.js\";\nimport { assert } from \"../helpers/utils/assert.js\";\nimport { abort } from \"../helpers/utils/error/errors/abort-error.js\";\nexport class Async {\n    constructor() {\n        var _a, _b, _c, _d, _e;\n        this.timers = new Map();\n        this.__callbacks = new Map();\n        this.__queueMicrotaskNative = (_a = queueMicrotask === null || queueMicrotask === void 0 ? void 0 : queueMicrotask.bind(window)) !== null && _a !== void 0 ? _a : Promise.resolve().then.bind(Promise.resolve());\n        this.promisesRejections = new Set();\n        this.__requestsIdle = new Set();\n        this.__controllers = new Set();\n        this.__requestsRaf = new Set();\n        this.__requestIdleCallbackNative = (_c = (_b = window['requestIdleCallback']) === null || _b === void 0 ? void 0 : _b.bind(window)) !== null && _c !== void 0 ? _c : ((callback, options) => {\n            var _a;\n            const start = Date.now();\n            return this.setTimeout(() => {\n                callback({\n                    didTimeout: false,\n                    timeRemaining: () => Math.max(0, 50 - (Date.now() - start))\n                });\n            }, (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : 1);\n        });\n        this.__cancelIdleCallbackNative = (_e = (_d = window['cancelIdleCallback']) === null || _d === void 0 ? void 0 : _d.bind(window)) !== null && _e !== void 0 ? _e : ((request) => {\n            this.clearTimeout(request);\n        });\n        this.isDestructed = false;\n    }\n    delay(timeout) {\n        return this.promise(resolve => this.setTimeout(resolve, timeout));\n    }\n    setTimeout(callback, timeout, ...args) {\n        if (this.isDestructed) {\n            return 0;\n        }\n        let options = {};\n        if (isVoid(timeout)) {\n            timeout = 0;\n        }\n        if (!isNumber(timeout)) {\n            options = timeout;\n            timeout = options.timeout || 0;\n        }\n        if (options.label) {\n            this.clearLabel(options.label);\n        }\n        const timer = setTimeout(callback, timeout, ...args);\n        const key = options.label || timer;\n        this.timers.set(key, timer);\n        this.__callbacks.set(key, callback);\n        return timer;\n    }\n    updateTimeout(label, timeout) {\n        assert(label && this.timers.has(label), 'Label does not exist');\n        if (!label || !this.timers.has(label)) {\n            return null;\n        }\n        const callback = this.__callbacks.get(label);\n        assert(isFunction(callback), 'Callback is not a function');\n        return this.setTimeout(callback, { label, timeout });\n    }\n    clearLabel(label) {\n        if (label && this.timers.has(label)) {\n            clearTimeout(this.timers.get(label));\n            this.timers.delete(label);\n            this.__callbacks.delete(label);\n        }\n    }\n    clearTimeout(timerOrLabel) {\n        if (isString(timerOrLabel)) {\n            return this.clearLabel(timerOrLabel);\n        }\n        clearTimeout(timerOrLabel);\n        this.timers.delete(timerOrLabel);\n        this.__callbacks.delete(timerOrLabel);\n    }\n    /**\n     * Debouncing enforces that a function not be called again until a certain amount of time has passed without\n     * it being called. As in \"execute this function only if 100 milliseconds have passed without it being called.\"\n     *\n     * @example\n     * ```javascript\n     * var jodit = Jodit.make('.editor');\n     * jodit.e.on('mousemove', jodit.async.debounce(() => {\n     * \t// Do expensive things\n     * }, 100));\n     * ```\n     */\n    debounce(fn, timeout, firstCallImmediately = false) {\n        let timer = 0, fired = false;\n        const promises = [];\n        const callFn = (...args) => {\n            if (!fired) {\n                timer = 0;\n                const res = fn(...args);\n                fired = true;\n                if (promises.length) {\n                    const runPromises = () => {\n                        promises.forEach(res => res());\n                        promises.length = 0;\n                    };\n                    isPromise(res) ? res.finally(runPromises) : runPromises();\n                }\n            }\n        };\n        const onFire = (...args) => {\n            fired = false;\n            if (!timeout) {\n                callFn(...args);\n            }\n            else {\n                if (!timer && firstCallImmediately) {\n                    callFn(...args);\n                }\n                clearTimeout(timer);\n                timer = this.setTimeout(() => callFn(...args), isFunction(timeout) ? timeout() : timeout);\n                this.timers.set(fn, timer);\n            }\n        };\n        return isPlainObject(timeout) && timeout.promisify\n            ? (...args) => {\n                const promise = this.promise(res => {\n                    promises.push(res);\n                }).catch((e) => {\n                    if (isAbortError(e)) {\n                        return null;\n                    }\n                    throw e;\n                });\n                onFire(...args);\n                return promise;\n            }\n            : onFire;\n    }\n    microDebounce(fn, firstCallImmediately = false) {\n        let scheduled = false;\n        let needCall = true;\n        let savedArgs;\n        return ((...args) => {\n            savedArgs = args;\n            if (scheduled) {\n                needCall = true;\n                return;\n            }\n            needCall = true;\n            if (firstCallImmediately) {\n                needCall = false;\n                fn(...savedArgs);\n            }\n            scheduled = true;\n            this.__queueMicrotaskNative(() => {\n                scheduled = false;\n                if (this.isDestructed) {\n                    return;\n                }\n                needCall && fn(...savedArgs);\n            });\n        });\n    }\n    /**\n     * Throttling enforces a maximum number of times a function can be called over time.\n     * As in \"execute this function at most once every 100 milliseconds.\"\n     *\n     * @example\n     * ```javascript\n     * var jodit = Jodit.make('.editor');\n     * jodit.e.on(document.body, 'scroll', jodit.async.throttle(function() {\n     * \t// Do expensive things\n     * }, 100));\n     * ```\n     */\n    throttle(fn, timeout, ignore = false) {\n        let timer = null, needInvoke, callee, lastArgs;\n        return (...args) => {\n            needInvoke = true;\n            lastArgs = args;\n            if (!timeout) {\n                fn(...lastArgs);\n                return;\n            }\n            if (!timer) {\n                callee = () => {\n                    if (needInvoke) {\n                        fn(...lastArgs);\n                        needInvoke = false;\n                        timer = this.setTimeout(callee, isFunction(timeout) ? timeout() : timeout);\n                        this.timers.set(callee, timer);\n                    }\n                    else {\n                        timer = null;\n                    }\n                };\n                callee();\n            }\n        };\n    }\n    promise(executor) {\n        let rejectCallback = () => { };\n        const promise = new Promise((resolve, reject) => {\n            rejectCallback = () => reject(abort('Abort async'));\n            this.promisesRejections.add(rejectCallback);\n            executor(resolve, reject);\n        });\n        if (!promise.finally && typeof process !== 'undefined' && !IS_ES_NEXT) {\n            promise.finally = (onfinally) => {\n                promise.then(onfinally).catch(onfinally);\n                return promise;\n            };\n        }\n        promise\n            .finally(() => {\n            this.promisesRejections.delete(rejectCallback);\n        })\n            .catch(() => null);\n        promise.rejectCallback = rejectCallback;\n        return promise;\n    }\n    /**\n     * Get Promise status\n     */\n    promiseState(p) {\n        if (p.status) {\n            return p.status;\n        }\n        // Hi IE11\n        if (!Promise.race) {\n            return new Promise(resolve => {\n                p.then(v => {\n                    resolve('fulfilled');\n                    return v;\n                }, e => {\n                    resolve('rejected');\n                    throw e;\n                });\n                this.setTimeout(() => {\n                    resolve('pending');\n                }, 100);\n            });\n        }\n        const t = {};\n        return Promise.race([p, t]).then(v => (v === t ? 'pending' : 'fulfilled'), () => 'rejected');\n    }\n    requestIdleCallback(callback, options = { timeout: 100 }) {\n        const request = this.__requestIdleCallbackNative(callback, options);\n        this.__requestsIdle.add(request);\n        return request;\n    }\n    requestIdlePromise(options) {\n        return this.promise(res => {\n            const request = this.requestIdleCallback(() => res(request), options);\n        });\n    }\n    /**\n     * Try to use scheduler.postTask if it is available https://wicg.github.io/scheduling-apis/\n     */\n    schedulerPostTask(task, options = {\n        delay: 0,\n        priority: 'user-visible'\n    }) {\n        const controller = new AbortController();\n        if (options.signal) {\n            options.signal.addEventListener('abort', () => controller.abort());\n        }\n        this.__controllers.add(controller);\n        // @ts-ignore\n        if (typeof globalThis.scheduler !== 'undefined') {\n            const scheduler = globalThis.scheduler;\n            const promise = scheduler.postTask(task, {\n                ...options,\n                signal: controller.signal\n            });\n            promise\n                .finally(() => {\n                this.__controllers.delete(controller);\n            })\n                .catch(() => null);\n            return promise;\n        }\n        return this.promise((resolve, reject) => {\n            const timeout = this.setTimeout(() => {\n                try {\n                    resolve(task());\n                }\n                catch (e) {\n                    reject(e);\n                }\n                this.__controllers.delete(controller);\n            }, options.delay || 1);\n            controller.signal.addEventListener('abort', () => {\n                this.clearTimeout(timeout);\n                this.__controllers.delete(controller);\n                reject(abort());\n            });\n        });\n    }\n    schedulerYield() {\n        return this.schedulerPostTask(() => { }, { priority: 'user-visible' });\n    }\n    cancelIdleCallback(request) {\n        this.__requestsIdle.delete(request);\n        return this.__cancelIdleCallbackNative(request);\n    }\n    requestAnimationFrame(callback) {\n        const request = requestAnimationFrame(callback);\n        this.__requestsRaf.add(request);\n        return request;\n    }\n    cancelAnimationFrame(request) {\n        this.__requestsRaf.delete(request);\n        cancelAnimationFrame(request);\n    }\n    clear() {\n        this.__requestsIdle.forEach(key => this.cancelIdleCallback(key));\n        this.__requestsRaf.forEach(key => this.cancelAnimationFrame(key));\n        this.__controllers.forEach(controller => controller.abort());\n        this.timers.forEach(key => clearTimeout(this.timers.get(key)));\n        this.timers.clear();\n        this.promisesRejections.forEach(reject => reject());\n        this.promisesRejections.clear();\n    }\n    destruct() {\n        this.clear();\n        this.isDestructed = true;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
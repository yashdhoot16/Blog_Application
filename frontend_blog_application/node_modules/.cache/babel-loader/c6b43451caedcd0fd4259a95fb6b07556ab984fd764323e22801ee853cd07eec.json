{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { isString } from \"../checker/is-string.js\";\nimport { completeUrl } from \"./complete-url.js\";\nexport const alreadyLoadedList = new Map();\nconst cacheLoaders = loader => {\n  return (jodit, url) => {\n    if (alreadyLoadedList.has(url)) {\n      return alreadyLoadedList.get(url);\n    }\n    const promise = loader(jodit, url);\n    alreadyLoadedList.set(url, promise);\n    return promise;\n  };\n};\n/**\n * Load script and return promise\n */\nexport const appendScriptAsync = cacheLoaders((jodit, url) => {\n  return jodit.async.promise((resolve, reject) => {\n    if (jodit.isInDestruct) {\n      return reject();\n    }\n    const script = jodit.c.element('script', {\n      type: 'text/javascript',\n      crossorigin: 'anonymous',\n      referrerpolicy: 'no-referrer',\n      async: true,\n      src: completeUrl(url)\n    });\n    jodit.od.body.appendChild(script);\n    jodit.e.on(script, 'error', reject).on(script, 'load', resolve);\n  });\n});\n/**\n * Download CSS style script\n */\nexport const appendStyleAsync = cacheLoaders((jodit, url) => {\n  return jodit.async.promise((resolve, reject) => {\n    if (jodit.isInDestruct) {\n      return reject();\n    }\n    const link = jodit.c.element('link');\n    link.rel = 'stylesheet';\n    link.media = 'all';\n    link.crossOrigin = 'anonymous';\n    const callback = () => resolve(link);\n    !jodit.isInDestruct && jodit.e.on(link, 'load', callback).on(link, 'error', reject);\n    link.href = completeUrl(url);\n    if (jodit.o.shadowRoot) {\n      jodit.o.shadowRoot.appendChild(link);\n    } else {\n      jodit.od.body.appendChild(link);\n    }\n  });\n});\nexport function loadNext(jodit, urls, i = 0) {\n  if (!isString(urls[i])) {\n    return Promise.resolve();\n  }\n  return appendScriptAsync(jodit, urls[i]).then(() => loadNext(jodit, urls, i + 1));\n}\nexport function loadNextStyle(jodit, urls, i = 0) {\n  if (!isString(urls[i])) {\n    return Promise.resolve();\n  }\n  return appendStyleAsync(jodit, urls[i]).then(() => loadNextStyle(jodit, urls, i + 1));\n}","map":{"version":3,"names":["isString","completeUrl","alreadyLoadedList","Map","cacheLoaders","loader","jodit","url","has","get","promise","set","appendScriptAsync","async","resolve","reject","isInDestruct","script","c","element","type","crossorigin","referrerpolicy","src","od","body","appendChild","e","on","appendStyleAsync","link","rel","media","crossOrigin","callback","href","o","shadowRoot","loadNext","urls","i","Promise","then","loadNextStyle"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/helpers/utils/append-script.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { isString } from \"../checker/is-string.js\";\nimport { completeUrl } from \"./complete-url.js\";\nexport const alreadyLoadedList = new Map();\nconst cacheLoaders = (loader) => {\n    return (jodit, url) => {\n        if (alreadyLoadedList.has(url)) {\n            return alreadyLoadedList.get(url);\n        }\n        const promise = loader(jodit, url);\n        alreadyLoadedList.set(url, promise);\n        return promise;\n    };\n};\n/**\n * Load script and return promise\n */\nexport const appendScriptAsync = cacheLoaders((jodit, url) => {\n    return jodit.async.promise((resolve, reject) => {\n        if (jodit.isInDestruct) {\n            return reject();\n        }\n        const script = jodit.c.element('script', {\n            type: 'text/javascript',\n            crossorigin: 'anonymous',\n            referrerpolicy: 'no-referrer',\n            async: true,\n            src: completeUrl(url)\n        });\n        jodit.od.body.appendChild(script);\n        jodit.e.on(script, 'error', reject).on(script, 'load', resolve);\n    });\n});\n/**\n * Download CSS style script\n */\nexport const appendStyleAsync = cacheLoaders((jodit, url) => {\n    return jodit.async.promise((resolve, reject) => {\n        if (jodit.isInDestruct) {\n            return reject();\n        }\n        const link = jodit.c.element('link');\n        link.rel = 'stylesheet';\n        link.media = 'all';\n        link.crossOrigin = 'anonymous';\n        const callback = () => resolve(link);\n        !jodit.isInDestruct &&\n            jodit.e.on(link, 'load', callback).on(link, 'error', reject);\n        link.href = completeUrl(url);\n        if (jodit.o.shadowRoot) {\n            jodit.o.shadowRoot.appendChild(link);\n        }\n        else {\n            jodit.od.body.appendChild(link);\n        }\n    });\n});\nexport function loadNext(jodit, urls, i = 0) {\n    if (!isString(urls[i])) {\n        return Promise.resolve();\n    }\n    return appendScriptAsync(jodit, urls[i]).then(() => loadNext(jodit, urls, i + 1));\n}\nexport function loadNextStyle(jodit, urls, i = 0) {\n    if (!isString(urls[i])) {\n        return Promise.resolve();\n    }\n    return appendStyleAsync(jodit, urls[i]).then(() => loadNextStyle(jodit, urls, i + 1));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
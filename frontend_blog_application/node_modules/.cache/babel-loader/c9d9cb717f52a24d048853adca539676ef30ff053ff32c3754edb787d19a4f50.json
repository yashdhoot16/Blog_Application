{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YDHOOT\\\\Documents\\\\Spring Tool Suite Projects\\\\BlogApplication\\\\frontend_blog_application\\\\src\\\\components\\\\NewFeed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getAllPost } from \"../services/post_service\";\nimport { error } from \"./../../node_modules/jodit/esm/core/helpers/utils/error/error\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { size } from \"./../../node_modules/jodit/esm/core/helpers/size/object-size\";\nimport { offset } from \"./../../node_modules/jodit/esm/core/helpers/size/offset\";\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewFeed = () => {\n  _s();\n  const [postContent, setPostContent] = useState({});\n  useEffect(() => {\n    // load all posts from server..\n    getAllPost().then(data => {\n      console.log(data);\n      setPostContent(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          size: 10,\n          offset: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: [\"Blog Count : \", postContent ? postContent.totalElements : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), postContent.postContent.map(post => {\n          /*#__PURE__*/_jsxDEV(Post, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(NewFeed, \"qQHwDxhWcQt2UwVvtGwTGGphTlg=\");\n_c = NewFeed;\nexport default NewFeed;\nvar _c;\n$RefreshReg$(_c, \"NewFeed\");","map":{"version":3,"names":["React","useEffect","useState","getAllPost","error","Container","Row","Col","size","offset","Post","jsxDEV","_jsxDEV","NewFeed","_s","postContent","setPostContent","then","data","console","log","catch","children","className","md","totalElements","fileName","_jsxFileName","lineNumber","columnNumber","map","post","_c","$RefreshReg$"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/src/components/NewFeed.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getAllPost } from \"../services/post_service\";\r\nimport { error } from \"./../../node_modules/jodit/esm/core/helpers/utils/error/error\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { size } from \"./../../node_modules/jodit/esm/core/helpers/size/object-size\";\r\nimport { offset } from \"./../../node_modules/jodit/esm/core/helpers/size/offset\";\r\nimport Post from \"./Post\";\r\n\r\nconst NewFeed = () => {\r\n  const [postContent, setPostContent] = useState({});\r\n\r\n  useEffect(() => {\r\n    // load all posts from server..\r\n    getAllPost()\r\n      .then((data) => {\r\n        console.log(data);\r\n        setPostContent(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-3\">\r\n        <Col\r\n          md={{\r\n            size: 10,\r\n            offset: 1,\r\n          }}\r\n        >\r\n          <h3 className=\"text-center\">\r\n            Blog Count : {postContent ? postContent.totalElements : 0}\r\n          </h3>\r\n\r\n          {postContent.postContent.map((post) => {\r\n            <Post post={post}/>;\r\n          })}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewFeed;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,KAAK,QAAQ,+DAA+D;AACrF,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,YAAY;AAChD,SAASC,IAAI,QAAQ,8DAA8D;AACnF,SAASC,MAAM,QAAQ,yDAAyD;AAChF,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd;IACAE,UAAU,CAAC,CAAC,CACTc,IAAI,CAAEC,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBF,cAAc,CAACE,IAAI,CAAC;IACtB,CAAC,CAAC,CACDG,KAAK,CAAEjB,KAAK,IAAK;MAChBe,OAAO,CAACC,GAAG,CAAChB,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEQ,OAAA,CAACP,SAAS;IAAAiB,QAAA,eACRV,OAAA,CAACN,GAAG;MAACiB,SAAS,EAAC,MAAM;MAAAD,QAAA,eACnBV,OAAA,CAACL,GAAG;QACFiB,EAAE,EAAE;UACFhB,IAAI,EAAE,EAAE;UACRC,MAAM,EAAE;QACV,CAAE;QAAAa,QAAA,gBAEFV,OAAA;UAAIW,SAAS,EAAC,aAAa;UAAAD,QAAA,GAAC,eACb,EAACP,WAAW,GAAGA,WAAW,CAACU,aAAa,GAAG,CAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,EAEJd,WAAW,CAACA,WAAW,CAACe,GAAG,CAAEC,IAAI,IAAK;UACrC,aAAAnB,OAAA,CAACF,IAAI;YAACqB,IAAI,EAAEA;UAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QACrB,CAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACf,EAAA,CAnCID,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AAqCb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
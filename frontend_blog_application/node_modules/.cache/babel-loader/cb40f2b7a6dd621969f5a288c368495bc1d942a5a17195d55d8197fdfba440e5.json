{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\n/**\n * @module helpers/array\n */\nimport { isNativeFunction } from \"../checker/is-native-function.js\";\nimport { reset } from \"../utils/reset.js\";\n/**\n * Always return Array. It's a safe polyfill for [Array.from](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from) method\n * In certain scenarios (such as with Joomla Mootools), Array.from may be substituted with a less optimal implementation\n * ```javascript\n * Jodit.modules.Helpers.toArray('123') // ['1', '2', '3']\n * Jodit.modules.Helpers.toArray(['test']) // ['test']\n * Jodit.modules.Helpers.toArray(1) // []\n * ```\n */\nexport const toArray = function toArray(...args) {\n  var _a;\n  const func = isNativeFunction(Array.from) ? Array.from : (_a = reset('Array.from')) !== null && _a !== void 0 ? _a : Array.from;\n  return func.apply(Array, args);\n};","map":{"version":3,"names":["isNativeFunction","reset","toArray","args","_a","func","Array","from","apply"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/helpers/array/to-array.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\n/**\n * @module helpers/array\n */\nimport { isNativeFunction } from \"../checker/is-native-function.js\";\nimport { reset } from \"../utils/reset.js\";\n/**\n * Always return Array. It's a safe polyfill for [Array.from](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from) method\n * In certain scenarios (such as with Joomla Mootools), Array.from may be substituted with a less optimal implementation\n * ```javascript\n * Jodit.modules.Helpers.toArray('123') // ['1', '2', '3']\n * Jodit.modules.Helpers.toArray(['test']) // ['test']\n * Jodit.modules.Helpers.toArray(1) // []\n * ```\n */\nexport const toArray = function toArray(...args) {\n    var _a;\n    const func = isNativeFunction(Array.from)\n        ? Array.from\n        : ((_a = reset('Array.from')) !== null && _a !== void 0 ? _a : Array.from);\n    return func.apply(Array, args);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAgB,QAAQ,kCAAkC;AACnE,SAASC,KAAK,QAAQ,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,OAAO,GAAG,SAASA,OAAOA,CAAC,GAAGC,IAAI,EAAE;EAC7C,IAAIC,EAAE;EACN,MAAMC,IAAI,GAAGL,gBAAgB,CAACM,KAAK,CAACC,IAAI,CAAC,GACnCD,KAAK,CAACC,IAAI,GACT,CAACH,EAAE,GAAGH,KAAK,CAAC,YAAY,CAAC,MAAM,IAAI,IAAIG,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGE,KAAK,CAACC,IAAK;EAC9E,OAAOF,IAAI,CAACG,KAAK,CAACF,KAAK,EAAEH,IAAI,CAAC;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
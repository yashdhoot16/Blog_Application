{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YDHOOT\\\\Documents\\\\Spring Tool Suite Projects\\\\BlogApplication\\\\frontend_blog_application\\\\src\\\\components\\\\NewFeed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getAllPost } from \"../services/post_service\";\nimport { error } from \"./../../node_modules/jodit/esm/core/helpers/utils/error/error\";\nimport { Container, Row, Col, Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport { size } from \"./../../node_modules/jodit/esm/core/helpers/size/object-size\";\nimport { offset } from \"./../../node_modules/jodit/esm/core/helpers/size/offset\";\nimport Post from \"./Post\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewFeed = () => {\n  _s();\n  var _postContent$content;\n  const [postContent, setPostContent] = useState({\n    content: [],\n    pageNumber: \"\",\n    pageSize: \"\",\n    totalPages: \"\",\n    pageSize: \"\",\n    totalElements: \"\",\n    lastPage: false\n  });\n  useEffect(() => {\n    // load all posts from server..\n    getAllPost(0, postContent.pageSize = 5).then(data => {\n      console.log(data);\n      setPostContent(data);\n    }).catch(error => {\n      // console.log(error);\n      toast.error(\"Error in loading posts !!\");\n    });\n  }, []);\n\n  // Method required for Pagination..\n  const changePage = (pageNumber = 0, pageSize = 5) => {\n    if (postContent.lastPage) {\n      return;\n    }\n    getAllPost(pageNumber, pageSize).then(data => {\n      setPostContent(data);\n      console.log(data);\n    }).catch(error => {\n      toast.error(\"Error in loading posts !!\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          size: 10,\n          offset: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: [\"Blog Count : \", postContent ? postContent.totalElements : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), (_postContent$content = postContent.content) === null || _postContent$content === void 0 ? void 0 : _postContent$content.map(post => /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, post.postId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"center mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(PaginationItem, {\n              disabled: postContent.pageNumber == 0,\n              children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                previous: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), [...Array(postContent.totalPages)].map((item, index) => /*#__PURE__*/_jsxDEV(PaginationItem, {\n              active: index == postContent.pageNumber,\n              onClick: () => changePage(index),\n              children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(PaginationItem, {\n              onClick: ++postContent.pageNumber,\n              disabled: postContent.lastPage,\n              children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n                next: true,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(NewFeed, \"SlkeddMWMID8hLpReZO6fPwoUBM=\");\n_c = NewFeed;\nexport default NewFeed;\nvar _c;\n$RefreshReg$(_c, \"NewFeed\");","map":{"version":3,"names":["React","useEffect","useState","getAllPost","error","Container","Row","Col","Pagination","PaginationItem","PaginationLink","size","offset","Post","toast","jsxDEV","_jsxDEV","NewFeed","_s","_postContent$content","postContent","setPostContent","content","pageNumber","pageSize","totalPages","totalElements","lastPage","then","data","console","log","catch","changePage","children","className","md","fileName","_jsxFileName","lineNumber","columnNumber","map","post","postId","disabled","previous","Array","item","index","active","onClick","next","_c","$RefreshReg$"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/src/components/NewFeed.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getAllPost } from \"../services/post_service\";\r\nimport { error } from \"./../../node_modules/jodit/esm/core/helpers/utils/error/error\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n} from \"reactstrap\";\r\nimport { size } from \"./../../node_modules/jodit/esm/core/helpers/size/object-size\";\r\nimport { offset } from \"./../../node_modules/jodit/esm/core/helpers/size/offset\";\r\nimport Post from \"./Post\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst NewFeed = () => {\r\n  const [postContent, setPostContent] = useState({\r\n    content: [],\r\n    pageNumber: \"\",\r\n    pageSize: \"\",\r\n    totalPages: \"\",\r\n    pageSize: \"\",\r\n    totalElements: \"\",\r\n    lastPage: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // load all posts from server..\r\n    getAllPost(0,postContent.pageSize=5)\r\n      .then((data) => {\r\n        console.log(data);\r\n        setPostContent(data);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error);\r\n        toast.error(\"Error in loading posts !!\");\r\n      });\r\n  }, []);\r\n\r\n  // Method required for Pagination..\r\n  const changePage = (pageNumber = 0, pageSize = 5) => {\r\n    if(postContent.lastPage){\r\n        return\r\n    }\r\n    getAllPost(pageNumber, pageSize)\r\n      .then((data) => {\r\n        setPostContent(data);\r\n        console.log(data)\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Error in loading posts !!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-3\">\r\n        <Col\r\n          md={{\r\n            size: 10,\r\n            offset: 1,\r\n          }}\r\n        >\r\n          <h3 className=\"text-center\">\r\n            Blog Count : {postContent ? postContent.totalElements : 0}\r\n          </h3>\r\n\r\n          {postContent.content?.map((post) => (\r\n            <Post key={post.postId} post={post} />\r\n          ))}\r\n\r\n          <Container className=\"center mt-3\">\r\n            <Pagination size=\"sm\">\r\n              <PaginationItem disabled={postContent.pageNumber == 0}>\r\n                <PaginationLink previous></PaginationLink>\r\n              </PaginationItem>\r\n              {[...Array(postContent.totalPages)].map((item, index) => (\r\n                <PaginationItem\r\n                  active={index == postContent.pageNumber}\r\n                  key={index}\r\n                  onClick={()=>changePage(index)}\r\n                >\r\n                  <PaginationLink>{index + 1}</PaginationLink>\r\n                </PaginationItem>\r\n              ))}\r\n              <PaginationItem onClick={(++postContent.pageNumber)} disabled={postContent.lastPage}>\r\n                <PaginationLink next>Next</PaginationLink>\r\n              </PaginationItem>\r\n            </Pagination>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
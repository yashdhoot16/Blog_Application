{"ast":null,"code":"/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { IS_PROD } from \"../../constants.js\";\nimport { getContainer } from \"../../global.js\";\nimport { isInitable } from \"../../helpers/checker/index.js\";\nimport { loadStyle } from \"./load.js\";\n/**\n * Init plugin if it has no dependencies, in another case wait requires plugins will be init\n * @private\n */\nexport function init(jodit, pluginName, plugin, instance, doneList, waitingList) {\n  if (isInitable(instance)) {\n    try {\n      instance.init(jodit);\n    } catch (e) {\n      console.error(e);\n      if (!IS_PROD) {\n        throw e;\n      }\n    }\n  }\n  doneList.set(pluginName, instance);\n  waitingList.delete(pluginName);\n  if (instance.hasStyle) {\n    loadStyle(jodit, pluginName).catch(e => {\n      !IS_PROD && console.error(e);\n    });\n  }\n  if (instance.styles) {\n    const style = getContainer(jodit, pluginName, 'style');\n    style.innerHTML = instance.styles;\n  }\n}","map":{"version":3,"names":["IS_PROD","getContainer","isInitable","loadStyle","init","jodit","pluginName","plugin","instance","doneList","waitingList","e","console","error","set","delete","hasStyle","catch","styles","style","innerHTML"],"sources":["C:/Users/YDHOOT/Documents/Spring Tool Suite Projects/BlogApplication/frontend_blog_application/node_modules/jodit/esm/core/plugin/helpers/init-instance.js"],"sourcesContent":["/*!\n * Jodit Editor (https://xdsoft.net/jodit/)\n * Released under MIT see LICENSE.txt in the project root for license information.\n * Copyright (c) 2013-2025 Valeriy Chupurnov. All rights reserved. https://xdsoft.net\n */\nimport { IS_PROD } from \"../../constants.js\";\nimport { getContainer } from \"../../global.js\";\nimport { isInitable } from \"../../helpers/checker/index.js\";\nimport { loadStyle } from \"./load.js\";\n/**\n * Init plugin if it has no dependencies, in another case wait requires plugins will be init\n * @private\n */\nexport function init(jodit, pluginName, plugin, instance, doneList, waitingList) {\n    if (isInitable(instance)) {\n        try {\n            instance.init(jodit);\n        }\n        catch (e) {\n            console.error(e);\n            if (!IS_PROD) {\n                throw e;\n            }\n        }\n    }\n    doneList.set(pluginName, instance);\n    waitingList.delete(pluginName);\n    if (instance.hasStyle) {\n        loadStyle(jodit, pluginName).catch(e => {\n            !IS_PROD && console.error(e);\n        });\n    }\n    if (instance.styles) {\n        const style = getContainer(jodit, pluginName, 'style');\n        style.innerHTML = instance.styles;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,SAASC,SAAS,QAAQ,WAAW;AACrC;AACA;AACA;AACA;AACA,OAAO,SAASC,IAAIA,CAACC,KAAK,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,EAAE;EAC7E,IAAIR,UAAU,CAACM,QAAQ,CAAC,EAAE;IACtB,IAAI;MACAA,QAAQ,CAACJ,IAAI,CAACC,KAAK,CAAC;IACxB,CAAC,CACD,OAAOM,CAAC,EAAE;MACNC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MAChB,IAAI,CAACX,OAAO,EAAE;QACV,MAAMW,CAAC;MACX;IACJ;EACJ;EACAF,QAAQ,CAACK,GAAG,CAACR,UAAU,EAAEE,QAAQ,CAAC;EAClCE,WAAW,CAACK,MAAM,CAACT,UAAU,CAAC;EAC9B,IAAIE,QAAQ,CAACQ,QAAQ,EAAE;IACnBb,SAAS,CAACE,KAAK,EAAEC,UAAU,CAAC,CAACW,KAAK,CAACN,CAAC,IAAI;MACpC,CAACX,OAAO,IAAIY,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;IAChC,CAAC,CAAC;EACN;EACA,IAAIH,QAAQ,CAACU,MAAM,EAAE;IACjB,MAAMC,KAAK,GAAGlB,YAAY,CAACI,KAAK,EAAEC,UAAU,EAAE,OAAO,CAAC;IACtDa,KAAK,CAACC,SAAS,GAAGZ,QAAQ,CAACU,MAAM;EACrC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}